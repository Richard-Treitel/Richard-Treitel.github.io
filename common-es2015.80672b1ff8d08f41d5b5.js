(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"+DC3":function(e,t){e.exports='<span class="icons-in-header">\n    <button mat-icon-button class="account" [matMenuTriggerFor]="userMenu">\n      <mat-icon class="avatar" fontIcon="md-person"></mat-icon>\n    </button>\n\n    <mat-menu #userMenu="matMenu" [class]="\'user-menu\'" [xPosition]="\'before\'">\n      <div class="name-container">\n        <div class="signed-in-text" i18n>Logged on as</div>\n        <div class="user-name">{{authenticationService.userMessage}}</div>\n        <mat-icon class="avatar" fontIcon="md-person"></mat-icon>\n      </div>\n      <button mat-menu-item\n              *ngIf="!!authenticationService.currentUser\n                     && !userIsOnlyOperator(authenticationService.currentUser)"\n              [routerLink]="\'/admin\'" i18n>\n        Your account\n      </button>\n      <button mat-menu-item (click)="help()" i18n>\n        Help\n      </button>\n\n      <button mat-menu-item [routerLink]="\'/about\'" i18n>\n        About\n      </button>\n      \n      <button mat-menu-item (click)="logout()" i18n>Log off</button>\n    </mat-menu>\n\n    <img id="roche-logo" width="65" alt="Roche Logo" src="../../../assets/images/Roche_Logo.svg">\n  </span>\n'},"+rNq":function(e,t){e.exports="mat-card.mat-card {\n  margin-right: 0;\n}\n\n.mat-card-content {\n  background-color: white;\n}\n\n.mat-card-content .one-metric {\n  position: relative;\n  display: inline-block;\n  height: 70px;\n  width: 180px;\n  margin: 0 0 20px 20px;\n}"},"+tTE":function(e,t,n){"use strict";n.d(t,"a",function(){return r});var a=n("mrSG"),i=n("8Y7J");let r=class{constructor(){}ngOnInit(){}};a.a([Object(i.F)()],r.prototype,"title",void 0),a.a([Object(i.F)()],r.prototype,"qcMetrics",void 0),r=a.a([Object(i.n)({selector:"sgp-client-qc-metric-list",template:n("41P+"),styles:[n("+rNq")]})],r)},"/GCZ":function(e,t,n){"use strict";n.d(t,"f",function(){return i}),n.d(t,"c",function(){return r}),n.d(t,"d",function(){return d}),n.d(t,"e",function(){return m}),n.d(t,"g",function(){return p}),n.d(t,"h",function(){return u}),n.d(t,"i",function(){return h}),n.d(t,"b",function(){return g}),n.d(t,"a",function(){return f}),n.d(t,"j",function(){return b});var a=n("qNuh");const i={key:"Total number of reads (read pairs)",name:"Number of read pairs per lane",value:"12,345,678",status:a.a.GOOD,cardinal:!0,thresholds:[{status:a.a.GOOD,range:{minimum:"20,000,000"}},{status:a.a.WARNING,range:{minimum:"10,000,000",exclusiveMaximum:"20,000,000"}}]},r={key:"SORTEDBAM_COVUNIF: perc panel positions with depth at least 300",name:"% Panel \u2265 300x Depth",value:"79.54%",status:a.a.WARNING,cardinal:!0,thresholds:[{status:a.a.GOOD,range:{exclusiveMinimum:"90.00%"}},{status:a.a.WARNING,range:{exclusiveMinimum:"75.00%",maximum:"90.00%"}},{status:a.a.ERROR,range:{maximum:"75.00%"}}]},s={key:"BCDEDUP_EXON_COVUNIF: perc panel positions with depth at least 300",name:"% Panel \u2265 300x Depth",value:"543",status:a.a.GOOD,cardinal:!1,thresholds:[]},o={key:"sortedbam: On-target rate",name:"On target",value:"0.70",status:a.a.WARNING,cardinal:!1,thresholds:[{status:a.a.GOOD,range:{exclusiveMinimum:"0.80"}},{status:a.a.WARNING,range:{minimum:"0.65",maximum:"0.80"}},{status:a.a.ERROR,range:{exclusiveMaximum:"0.65"}}]},l={key:"Matching status",name:"Matching status",value:"Not matched",status:a.a.ERROR,cardinal:!0,thresholds:[{status:a.a.GOOD,range:{minimum:"Matched",maximum:"Matched"}},{status:a.a.ERROR,range:{minimum:"Not matched",maximum:"Not matched"}}]},c=Object.assign({},l,{value:"Matched",status:a.a.GOOD}),d={key:"10/QRatio + 10",name:"Not aligned E",value:null,status:a.a.ERROR,cardinal:!1,thresholds:[]},m={key:"No status",name:"Has status NONE",value:"34",status:a.a.NONE,cardinal:!0,thresholds:[]},p={key:"10/QRatio + 10",name:"Not aligned X",value:"0.00",status:a.a.ERROR,cardinal:!1,thresholds:[{status:a.a.WARNING,range:{exclusiveMinimum:"0.65",exclusiveMaximum:"0.8"}}]},u={key:"10/QRatio + 10",name:"Not aligned Z",value:"0.00",status:a.a.ERROR,cardinal:!1,thresholds:[]},h=[r,s,o,i],g=[u,i],f={sample:h,analysis:g},b=[l,c]},"06wg":function(e,t){e.exports=".mat-dialog-container {\n  padding-top: 1em;\n}\n\n#create-token-component .mat-dialog-title, #show-token-component .mat-dialog-title {\n  font-size: 18px;\n  font-weight: bold;\n  line-height: 1.5em;\n  margin-bottom: 1em;\n}\n\n#create-token-component .mat-dialog-content .title, #show-token-component .mat-dialog-content .title {\n  margin-bottom: 1em;\n}\n\n#create-token-component .mat-dialog-actions button, #show-token-component .mat-dialog-actions button {\n  margin: 1em 0 0.5em 1em;\n}\n\n.mat-dialog-content .title {\n  margin-bottom: 2em;\n}\n\n.mat-dialog-content .help.when-invalid {\n  margin-top: 0.5em;\n}"},"0O5H":function(e,t){e.exports='<div class="role-presence">\n  <mat-icon [ngClass]="presence" fontIcon="md-check"></mat-icon>\n  <span [ngClass]="presence">{{roleName}}</span>\n</div>\n'},"0dme":function(e,t,n){"use strict";n.d(t,"a",function(){return d});var a=n("mrSG"),i=n("8Y7J"),r=n("4TB1"),s=n("iInd"),o=n("OHc7"),l=n("mId9"),c=n("wd/R");let d=class{constructor(e,t){this.router=e,this.route=t,this.analysisCompletedToday=!1,this.analysisCompletedYesterday=!1}set analysis(e){this._analysis=e}get analysis(){return this._analysis}ngOnInit(){this.analysis.completedAt&&this.setRelativeCompletionDate()}get statusIcon(){return l.a.get(this.analysis.status).shape}get statusClass(){return`status-${this.statusColor}`}get statusColor(){return l.a.get(this.analysis.status).color}get inProgress(){return Object(r.b)(this.analysis.status)}goToDetail(){this.router.navigate(["../detail",this.analysis.id],{relativeTo:this.route})}setRelativeCompletionDate(){const e=c().utcOffset(c.parseZone(this.analysis.completedAt).utcOffset()),t=this.analysis.completedAt.substring(0,o.a.ISO8601_CHARS_INCLUDING_DAYS);if(e.toISOString(!0).startsWith(t))this.analysisCompletedToday=!0;else{e.add(-1,"day"),e.toISOString(!0).startsWith(t)&&(this.analysisCompletedYesterday=!0)}}};d.ctorParameters=()=>[{type:s.i},{type:s.a}],a.a([Object(i.F)()],d.prototype,"analysis",null),d=a.a([Object(i.n)({selector:"sgp-client-analysis-tile",template:n("K8J7"),styles:[n("j0KX")]})],d)},"0sCK":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var a=n("mrSG"),i=n("8Y7J"),r=n("s6ns"),s=n("wd/R"),o=n("wgQU"),l=n("QscJ");let c=class{constructor(e,t){this.dialog=e,this.afterSubmit=new i.w,t.getCurrentDate().subscribe(e=>l.a.today=s(e.date))}ngOnInit(){}openChooseMatch(){const e={tumorSample:this.tumorSample,tumorSampleResult:this.tumorSampleResult};this.dialog.open(l.a,{data:e,maxHeight:"95vh",maxWidth:"95vw"}).afterClosed().subscribe(e=>{e&&e.id&&this.afterSubmit.emit(e.id)})}};c.ctorParameters=()=>[{type:r.b},{type:o.a}],a.a([Object(i.F)()],c.prototype,"tumorSample",void 0),a.a([Object(i.F)()],c.prototype,"tumorSampleResult",void 0),a.a([Object(i.R)()],c.prototype,"afterSubmit",void 0),c=a.a([Object(i.n)({selector:"sgp-client-tumor-normal-button",template:n("61/7"),styles:[n("asg/")]})],c)},"16hL":function(e,t){e.exports=".header-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.header-page-title {\n  font-size: 18px;\n  font-weight: normal;\n  color: #191919;\n}\n\n.table-name {\n  font-size: 24px;\n  font-weight: normal;\n  color: #191919;\n  line-height: 24px;\n}\n\n.card-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.card-body {\n  font-size: 14px;\n  font-weight: normal;\n  color: #4d4d4d;\n}\n\n.body-1 {\n  font-size: 14px;\n  font-weight: normal;\n  color: #191919;\n}\n\n.body-2 {\n  font-size: 14px;\n  font-weight: bold;\n  color: #191919;\n}\n\nmat-card {\n  margin-right: 0px;\n}\n\nmat-card-content {\n  background-color: white;\n  padding-left: 20px;\n  padding-right: 20px;\n}\n\nmat-card-content .metadata {\n  margin-bottom: 20px;\n}\n\nmat-card-content .metadata > div {\n  padding-right: 10px;\n  color: #191919;\n}\n\nmat-card-content .metadata > div .name {\n  font-size: 12px;\n  font-weight: normal;\n  color: #bababa;\n}\n\nmat-card-content .metadata > div .can-be-long {\n  word-break: break-all;\n}\n\nmat-card-title sgp-client-analysis-icon {\n  vertical-align: middle;\n  margin-right: 10px;\n}\n\nmat-card-title div {\n  display: inline-block;\n  vertical-align: middle;\n}\n\nmat-card-footer {\n  border-top: 1px solid #e8e8e8;\n  direction: rtl;\n}"},"1jmG":function(e,t){e.exports=".mat-card-header {\n  padding-bottom: 20px;\n}\n.mat-card-header #new-background {\n  position: absolute;\n  right: 20px;\n}\n.mat-card .mat-divider {\n  position: static;\n  border-top-width: 2px;\n}\ntable {\n  width: 100%;\n  /*  TODO This is either unnecessary, or belongs in _material.scss. Check w/ Paul and Ran some day.\n    td.mat-cell:first-of-type, td.mat-footer-cell:first-of-type, th.mat-header-cell:first-of-type {\n      padding-left: 10px;\n    }\n    td.mat-cell:last-of-type, td.mat-footer-cell:last-of-type, th.mat-header-cell:last-of-type {\n      padding-right: 10px;\n    }\n  */\n}\ntable .mat-row {\n  cursor: pointer;\n}\ntable td, table th {\n  padding: 10px;\n}\ntable td:first-of-type, table th:first-of-type {\n  padding: 0;\n  width: 2em;\n}\ntable td:first-of-type .mat-icon.ERROR, table th:first-of-type .mat-icon.ERROR {\n  color: #cc0033;\n}\ntable td .mat-spinner, table th .mat-spinner {\n  margin: 2px;\n}\ntable td {\n  max-width: 9em;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n}\ntable td .mat-icon {\n  line-height: 10px;\n  position: relative;\n  top: 6px;\n}"},"1vCo":function(e,t,n){"use strict";n.d(t,"a",function(){return l}),n.d(t,"b",function(){return c});var a=n("mrSG"),i=n("8Y7J"),r=n("2Vo4"),s=n("nYR2"),o=n("0grb");class l{constructor(e){this.name=e}}l.ctorParameters=()=>[{type:String}];let c=class{constructor(e){this.apiService=e,this.API_TOKENS_PATH="/api-tokens",this._creatingApiToken=new r.a(!1)}get creatingApiToken(){return this._creatingApiToken.asObservable()}getAll(){return this.apiService.get(this.API_TOKENS_PATH)}create(e){return this._creatingApiToken.next(!0),this.apiService.post(this.API_TOKENS_PATH,e).pipe(Object(s.a)(()=>this._creatingApiToken.next(!1)))}delete(e){return this.apiService.delete(this.API_TOKENS_PATH+"/"+e)}assembleErrorMessage(e){return o.a.assembleErrorMessage(e,"ApiTokenService")}};c.ctorParameters=()=>[{type:o.a}],c=a.a([Object(i.C)({providedIn:"root"})],c)},"28te":function(e,t,n){"use strict";n.d(t,"a",function(){return i});var a=n("kiWL");class i{static getEmpty(){return{name:"",type:a.a.NEXTSEQ,machineName:"",apiTokenId:"",outputLocation:""}}}},"3LFC":function(e,t,n){"use strict";n.d(t,"a",function(){return d});var a=n("mrSG"),i=n("8Y7J"),r=n("tTFL"),s=n("IaDw"),o=n("n5xw"),l=n("puoW");const c=n("myW2").a.BACKGROUND_LOG;let d=class{constructor(e,t,n){this.snackBarService=e,this.panelService=t,this.associatedFileService=n,this.hasChangedDefault=new i.w,this.columnHeaders=["sampleName","analysisName","sampleType","chevronRight"],this.samples=[]}ngOnInit(){this.ngOnChanges()}ngOnChanges(){if(this.samples=[],this.logFileUrl=null,!this.background)return;const e=this.background.type;this.panelService.getBackgroundInPanel(this.panelId,this.background.id).subscribe(t=>{this.samples=(t.samples||[]).map(t=>l.a.fromBackgroundSampleDetail(t,e))}),this.panelService.getFilesForBackground(this.background.id).subscribe(e=>{const t=e.associatedFiles.find(e=>e.type===c);this.logFileUrl=t&&this.associatedFileService.getDownloadUrl(t.id)})}get backgroundCanBeDefault(){return this.background.status===l.b.COMPLETED}setDefault(){this.panelService.setBackgroundAsDefault(this.panelId,this.background.id).subscribe(()=>{this.background.backgroundDefault=!0,this.hasChangedDefault.emit()},e=>this.snackBarService.error("Failed to set background as default."))}};d.ctorParameters=()=>[{type:r.a},{type:s.a},{type:o.a}],a.a([Object(i.F)()],d.prototype,"panelId",void 0),a.a([Object(i.F)()],d.prototype,"background",void 0),a.a([Object(i.R)()],d.prototype,"hasChangedDefault",void 0),d=a.a([Object(i.n)({selector:"sgp-client-background-details",template:n("jh1A"),styles:[n("IbL+")]})],d)},"3it/":function(e,t){e.exports=".role-presence {\n  display: inline-block;\n  min-width: 9em;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.role-presence .mat-icon {\n  color: #191919;\n  font-size: 10px;\n  font-weight: normal;\n  padding: 0 5px;\n  margin-left: 1em;\n  height: 1.5em;\n  width: 1em;\n}\n.role-presence .mat-icon.absent {\n  opacity: 0;\n}\n.role-presence span .absent, .role-presence span .present {\n  text-overflow: ellipsis;\n}\n.role-presence span .absent {\n  color: #bababa;\n}"},"3oVL":function(e,t,n){"use strict";n.d(t,"a",function(){return a});const a=[{id:"parameterSet1",name:"parameter set 1",createdBy:"ROCHE_ADMINISTRATOR",createdAt:"2020-01-11T12:34:56-0700",parameterSetDefault:!0,archived:!1,indelAfThreshold:1.1,indelMinDepth:2.1,snvAfThreshold:3.1,snvMinDepth:4.1,minReadLength:5.1,baseQuality:6.1,mappingQuality:7.1,pipelineRelease:{id:"1",name:"pipeline1"},rocheCatalog:!1},{id:"parameterSet2",name:"parameter set 2",createdBy:"LAB_DIRECTOR",createdAt:"2020-01-11T12:34:56-0700",parameterSetDefault:!1,archived:!1,indelAfThreshold:1.2,indelMinDepth:2.2,snvAfThreshold:3.2,snvMinDepth:4.2,minReadLength:5.2,baseQuality:6.2,mappingQuality:7.2,pipelineRelease:{id:"2",name:"pipeline2"},rocheCatalog:!1}]},"41P+":function(e,t){e.exports='<mat-card>\n  <mat-card-header><mat-card-title>{{title}}</mat-card-title></mat-card-header>\n  <mat-divider></mat-divider>\n  <mat-card-content>\n    <div class="one-metric" *ngFor="let metric of qcMetrics">\n      <sgp-client-qc-metric-details [metric]="metric"></sgp-client-qc-metric-details>\n    </div>\n  </mat-card-content>\n</mat-card>\n'},"4Bnx":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var a=n("mrSG"),i=n("8Y7J"),r=n("tTFL"),s=n("0grb"),o=n("s6ns");let l=class{constructor(e,t,n){this.dialogRef=e,this.data=t,this.snackBarService=n}ngOnInit(){this.copied=!1,this.token&&Object.assign(this.data,this.token)}onGotIt(){this.dialogRef.close(this.copied)}onCancel(){this.dialogRef.close(!1)}hasAccessToClipboard(){return navigator&&!!navigator.clipboard}onCopyTokenFromCell(e){try{navigator.clipboard.writeText(e.innerText).then(()=>{this.snackBarService.success(`Your clipboard now contains ${e.innerText.substr(0,20)}...`),this.copied=!0}).catch(e=>{this.snackBarService.error("Could not copy token. Try again or copy it by hand."),s.a.assembleErrorMessage({error:e})})}catch(t){this.snackBarService.error("Browser cannot find clipboard. You can still copy the token yourself.")}}};l.ctorParameters=()=>[{type:o.d},{type:void 0,decorators:[{type:i.B,args:[o.a]}]},{type:r.a}],a.a([Object(i.F)()],l.prototype,"token",void 0),l=a.a([Object(i.n)({selector:"sgp-client-show-token",template:n("drcE"),styles:[n("fA/V")]}),a.b(1,Object(i.B)(o.a))],l)},"4h67":function(e,t,n){"use strict";n.d(t,"a",function(){return i});var a=n("qNuh");class i{static forStatus(e){return i.FOR_STATUS.get(e)}}i.FOR_STATUS=new Map([[a.a.ERROR,"md-error"],[a.a.WARNING,"md-warning"],[a.a.GOOD,"md-check_circle"]])},"538T":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var a=n("mrSG"),i=n("8Y7J"),r=n("iInd"),s=n("U/RS");const o=[{icon:"md-home",url:`/${n("+MBg").b.listSamples}`},{label:s.a}];let l=class{constructor(e){this.activatedRoute=e,this._breadcrumbs=o,this.isUrlBackPresent=!1,this.headerLabel=null}set breadcrumbSpecs(e){this._breadcrumbs=this.buildBreadcrumbs(e)}get breadcrumbs(){return this._breadcrumbs}ngOnInit(){this.activatedRoute.snapshot.data.breadcrumbSpecs&&(this.breadcrumbSpecs=this.activatedRoute.snapshot.data.breadcrumbSpecs)}toBreadcrumbs(e){return this.isUrlBackPresent=!1,e.map(e=>{let t={label:e.label};if(e.urlBack)this.isUrlBackPresent=!0,this.headerLabel=e.label,t={icon:"md-arrow_back",url:e.urlBack};else if(e.dynamicLabel){const n=e.dynamicLabel.split(".");t={label:this.activatedRoute.snapshot.data[n[0]][n[1]]}}return t})}buildBreadcrumbs(e){if(!e)return o;const t=this.toBreadcrumbs(e);let n=this.isUrlBackPresent?[{label:this.headerLabel}]:o;return 1===e.length?n=this.isUrlBackPresent?t.concat(n):n.concat(t):e.length>1&&(n=t),n}};l.ctorParameters=()=>[{type:r.a}],a.a([Object(i.F)()],l.prototype,"breadcrumbSpecs",null),l=a.a([Object(i.n)({selector:"sgp-client-breadcrumb",template:n("vORZ"),styles:[n("ezbz")]})],l)},"61/7":function(e,t){e.exports='<button mat-menu-item i18n (click)="openChooseMatch()">Tumor/normal analysis</button>\n'},"69/+":function(e,t){e.exports="mat-card {\n  margin-right: 0;\n}\n\nmat-card-header {\n  -webkit-box-pack: justify;\n          justify-content: space-between;\n}\n\nmat-card-header mat-card-title mat-icon {\n  vertical-align: middle;\n  margin-right: 10px;\n  width: 44px;\n  height: 44px;\n}\n\nmat-card-header mat-card-title div {\n  display: inline-block;\n  vertical-align: middle;\n}\n\nmat-card-content {\n  background-color: white;\n  padding: 20px 20px 0 20px;\n}\n\nmat-card-content mat-form-field {\n  width: 100%;\n}\n\nmat-card-content form > div > div:nth-child(1) {\n  padding-right: 20px;\n}\n\nmat-card-content form > div > div:nth-child(2) {\n  padding-left: 20px;\n}\n\nmat-card-content .parameter-set-threshold-list {\n  margin-bottom: 20px;\n}\n\nmat-card-content .parameter-set-threshold {\n  display: -webkit-box;\n  display: flex;\n  padding-right: 20px;\n}\n\nmat-card-content .parameter-set-threshold > div {\n  display: inline-block;\n  width: 60%;\n  font-size: 12px;\n  font-weight: normal;\n}\n\nmat-card-content .parameter-set-threshold > div > span {\n  color: #bababa;\n}\n\nmat-card-content .parameter-set-threshold > mat-form-field {\n  width: 70px;\n  font-size: 12px;\n  font-weight: normal;\n  line-height: normal;\n}\n\nmat-card-footer {\n  -webkit-box-pack: justify;\n          justify-content: space-between;\n  vertical-align: middle;\n  margin: 0;\n}\n\nmat-card-footer div.warning {\n  padding: 0 20px 0;\n}"},"6F0r":function(e,t){e.exports='<div fxFlex id="create-token-component">\n  <div mat-dialog-title class="header-page-title" fxLayout="row" fxLayoutAlign="space-between center">\n    <div i18n>Generate new token</div>\n    <mat-icon class="md-18" (click)="onCancel()" fontIcon="md-clear"></mat-icon>\n  </div>\n  <form [formGroup]="formGroup">\n    <div mat-dialog-content class="card-body">\n      <div class="title"><p i18n>What do you want your token to be named?</p></div>\n      <mat-form-field>\n        <mat-label i18n>Token name</mat-label>\n        <input matInput type="text" id="token-name" formControlName="tokenName">\n        <mat-error *ngIf="tokenNameError(\'required\')" i18n>Token name must be specified.</mat-error>\n        <mat-error *ngIf="tokenNameError(\'pattern\')" i18n>Token name cannot be blank.</mat-error>\n        <mat-error *ngIf="tokenNameError(\'maxlength\')" i18n>Token name must be at most 250 characters.</mat-error>\n        <mat-error *ngIf="tokenNameError(\'existing\')" i18n>Token name already exists.</mat-error>\n      </mat-form-field>\n      <div class="help" [ngClass]="formGroup.invalid && !formGroup.untouched ? \'when-invalid\' : \'\'" i18n>\n        The token name is used for tracking API calls.\n      </div>\n    </div>\n\n    <div mat-dialog-actions fxLayout="row-reverse" fxLayoutAlign="space-after">\n      <button mat-button  id="button-proceed"\n              (click)="onCreate()" [disabled]="formGroup.invalid || (creatingApiToken | async)" i18n>\n        Create token\n      </button>\n\n      <button mat-button id="button-cancel" class="mat-flat-button" (click)="onCancel()" i18n>\n        Cancel\n      </button>\n    </div>\n  </form>\n</div>\n'},"6pY2":function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("I65S"),i=n("uDmN"),r=n("28te");class s extends i.a{static makeSequencer(e){const t=r.a.getEmpty();return t.name=e,t.id="ID_"+e,t.machineName="Machine_"+e,t}getAll(){return Object(a.of)([s.makeSequencer("FirstSeq")])}}},"75hn":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var a=n("mrSG"),i=n("8Y7J"),r=n("s7LF"),s=n("XNiG"),o=n("1G5W"),l=n("/5w7");let c=class{constructor(e){this.fb=e,this.onSampleResultChange=new i.w,this.isEditable=!1,this.form=this.fb.group({type:[""],panel:[""],inputMass:[""],qratio:[""],applicationMode:[""],isolatedMass:[""],plasmaVolume:[""],umi:[""]}),this.sampleTypes=Object.values(l.e),this.sampleModes=[l.b.SOMATIC,l.b.GERMLINE],this.ngUnsubscribe=new s.a}ngOnInit(){this.form.valueChanges.pipe(Object(o.a)(this.ngUnsubscribe)).subscribe(e=>{const t=this.mapFormValueToSampleResult(e);this.onSampleResultChange.emit(t)})}ngOnChanges(e){e.sampleResult&&(this.sampleResult=e.sampleResult.currentValue,this.sampleResult&&this.setFormValue(this.sampleResult))}ngOnDestroy(){this.ngUnsubscribe.next(),this.ngUnsubscribe.complete()}editDetails(){this.isEditable=!0}setFormValue(e){this.form.get("type").setValue(e.type),this.form.get("panel").setValue(e.panel.id),this.form.get("inputMass").setValue(e.inputMass),this.form.get("qratio").setValue(e.qratio),this.form.get("applicationMode").setValue(e.applicationMode),this.form.get("isolatedMass").setValue(e.isolatedMass),this.form.get("plasmaVolume").setValue(e.plasmaVolume),this.form.get("umi").setValue(e.umi)}mapFormValueToSampleResult(e){return Object.assign({},this.sampleResult,{type:e.type,panel:this.panels.find(t=>t.id===e.panel),inputMass:e.inputMass,qratio:e.qratio,applicationMode:e.applicationMode,isolatedMass:e.isolatedMass,plasmaVolume:e.plasmaVolume,umi:e.umi})}};c.ctorParameters=()=>[{type:r.b}],a.a([Object(i.F)()],c.prototype,"sampleId",void 0),a.a([Object(i.F)()],c.prototype,"sampleResult",void 0),a.a([Object(i.F)()],c.prototype,"panels",void 0),a.a([Object(i.R)()],c.prototype,"onSampleResultChange",void 0),c=a.a([Object(i.n)({selector:"sgp-client-rerun-sample-result",template:n("ifTL"),styles:[n("16hL")]})],c)},"7Z+v":function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("mrSG"),i=n("8Y7J"),r=n("+MBg");let s=class{constructor(){this.caption="somewhere"}ngOnInit(){this.caption=r.a[this.route]}};a.a([Object(i.F)()],s.prototype,"route",void 0),a.a([Object(i.F)()],s.prototype,"count",void 0),s=a.a([Object(i.n)({selector:"sas-tab-to-route",template:n("cugU"),styles:[n("xXQr")]})],s)},"7svx":function(e,t){e.exports='<mat-card>\n  <mat-card-header>\n    <mat-card-title i18n>Backgrounds</mat-card-title>\n    <button mat-button mat-raised-button\n            id="new-background" (click)="startNewBackground.emit()" i18n>\n      Generate new background\n    </button>\n  </mat-card-header>\n  <mat-divider></mat-divider>\n  <mat-card-content>\n    <table mat-table [dataSource]="dataSource" matSort>\n      <ng-container matColumnDef="status">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef="let background">\n          <mat-spinner diameter="21" *ngIf="background.status === \'RUNNING\'"></mat-spinner>\n          <mat-icon *ngIf="background.status === \'FAILED\'"\n                    [ngClass]="iconFor(background.status).toUpperCase()"\n                    fontIcon="md-{{iconFor(background.status)}}">\n          </mat-icon>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header i18n>Name</th>\n        <td mat-cell *matCellDef="let background">{{background.name}}</td>\n      </ng-container>\n      <ng-container matColumnDef="createdAt">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header i18n>Date created</th>\n        <td mat-cell *matCellDef="let background">{{background.createdAt | sgpDateFormat}}</td>\n      </ng-container>\n      <ng-container matColumnDef="backgroundDefault">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header i18n>Default</th>\n        <td mat-cell *matCellDef="let background">\n          <span *ngIf="background.backgroundDefault">\n            <mat-icon fontIcon="md-check"></mat-icon>\n            {{background.type | sampleType}}\n          </span>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef="type">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header i18n>Sample type</th>\n        <td mat-cell *matCellDef="let background">{{background.type | sampleType}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef="columnHeaders"></tr>\n      <tr mat-row *matRowDef="let row; columns: columnHeaders" (click)="examine.emit(row)"></tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n'},"8HCq":function(e,t,n){"use strict";var a=n("mrSG"),i=n("8Y7J"),r=n("s6ns"),s=n("iInd"),o=n("nYR2");class l{constructor(){this.firstName="",this.lastName="",this.email="",this.roles=[],this.mfaEnabled=!0}}var c=n("qfBg"),d=n("/7h9"),m=n("1zax"),p=n("tTFL"),u=n("+MBg");n.d(t,"a",function(){return h});let h=class extends d.a{constructor(e,t,n,a){super(n,"user"),this.userService=e,this.snackBarService=t,this.router=a,this.newUser=new l,this.canSave=!1,this.highlightErrors=!1}ngOnInit(){this.newUser=new l}get isUntouched(){return this.userDetails.isUntouched}onSave(){this.canSave=!1,this.userService.create(this.newUser).pipe(Object(o.a)(()=>{this.canSave=!0})).subscribe(()=>{this.snackBarService.success("User has been created."),this.router.navigateByUrl(["",u.b.admin,u.b.listUsers].join("/"))},e=>{this.snackBarService.error(`Failed to update user: ${this.userService.assembleErrorMessage(e)}`)})}};h.ctorParameters=()=>[{type:c.a},{type:p.a},{type:r.b},{type:s.i}],a.a([Object(i.lb)(m.b,{static:!0})],h.prototype,"userDetails",void 0),h=a.a([Object(i.n)({selector:"sgp-client-create-user",template:n("IIrX"),styles:[n("9Whb")]})],h)},"92+W":function(e,t){e.exports=".no-variants {\n  background-color: white;\n  padding: 20px 0;\n  text-align: center;\n  width: 100%;\n}"},"9HvN":function(e,t,n){"use strict";function a(e){return e.toLowerCase().trim()}function i(e){const t=e.map(e=>a(e));return e=>{const n=e.value;return n&&t.includes(a(n))?{existing:!0}:null}}n.d(t,"a",function(){return i})},"9Whb":function(e,t){e.exports=".header-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.header-page-title {\n  font-size: 18px;\n  font-weight: normal;\n  color: #191919;\n}\n\n.table-name {\n  font-size: 24px;\n  font-weight: normal;\n  color: #191919;\n  line-height: 24px;\n}\n\n.card-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.card-body {\n  font-size: 14px;\n  font-weight: normal;\n  color: #4d4d4d;\n}\n\n.body-1 {\n  font-size: 14px;\n  font-weight: normal;\n  color: #191919;\n}\n\n.body-2 {\n  font-size: 14px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.main-header-outlet {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.16);\n}\n\n@media print {\n  .main-header-outlet {\n    display: none;\n  }\n}\n\n.page-container {\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 20px;\n}\n\n.page-footer-container {\n  max-width: 1600px;\n  height: 54px;\n  padding: 0 20px;\n}\n\n.header-section {\n  display: -webkit-box;\n  display: flex;\n}\n\n.page-fixed-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.16);\n  box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.16);\n  background-color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 998;\n}\n\n.page-fixed-header .header-container {\n  height: 64px;\n  max-width: 1600px;\n  background-position-y: -12px;\n}\n\n.spacer-for-header {\n  height: 64px;\n}\n\n@media print {\n  .spacer-for-header {\n    display: none;\n  }\n}\n\n.sub-header {\n  position: fixed;\n  top: 65px;\n  z-index: 999;\n  width: 100%;\n  background-color: white;\n  box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.16);\n}\n\n.sub-header .sub-header-container {\n  max-width: 1600px;\n  height: 54px;\n}\n\n.spacer-for-sub-header {\n  height: 54px;\n}\n\n.page-content {\n  margin: 0 auto;\n  padding: 20px;\n  max-width: 1600px;\n  box-sizing: border-box;\n}\n\n.page-fixed-footer {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  z-index: 1002;\n  background-color: white;\n  width: 100%;\n  box-shadow: 0px -2px 3px 0px rgba(0, 0, 0, 0.16);\n}\n\n@media print {\n  .page-fixed-footer {\n    display: none;\n  }\n}\n\n.page-fixed-footer .page-footer-container {\n  height: 54px;\n  padding: 0 20px;\n}\n\n.spacer-for-footer {\n  height: 54px;\n}\n\n@media print {\n  .spacer-for-footer {\n    display: none;\n  }\n}\n\n.mat-card {\n  width: 700px;\n}\n\n.mat-card .mat-card-header-text {\n  margin: 0 10px;\n}\n\n.mat-card .mat-card-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.mat-card .mat-card-content {\n  margin-bottom: 0;\n}\n\n.mat-card .mat-card-actions {\n  height: 2.5em;\n  margin-left: 85%;\n}\n\n.mat-card .mat-card-actions button {\n  padding: 0 1.5em;\n}"},ACmb:function(e,t,n){"use strict";var a;n.d(t,"a",function(){return a}),function(e){e[e.NONE_DETECTED=0]="NONE_DETECTED",e[e.ERROR_FETCHING=1]="ERROR_FETCHING"}(a||(a={}))},AVtn:function(e,t){e.exports="button {\n  min-width: 160px;\n}\nbutton mat-icon {\n  color: #ffc414;\n}"},BhIG:function(e,t){e.exports='<div mat-dialog-title>\n  <span i18n>Match for tumor sample </span> <span>{{tumorSample?.name}}</span>\n  <button mat-icon-button mat-dialog-close>\n    <mat-icon fontIcon="md-close"></mat-icon>\n  </button>\n</div>\n\n<mat-divider class="thick"></mat-divider>\n\n<div mat-content>\n\n  <form [formGroup]="formGroup">\n\n    <div class="filters-all">\n\n      <ng-container [formGroup]="formGroup.controls.sequencingInfo">\n        <mat-form-field class="wrapper-slim">\n          <mat-label i18n>Sequencing started from</mat-label>\n          <input matInput class="upper-case-date" id="sequencing-earliest-start"\n                 [matDatepicker]="pickEarliestStart" #inputEarliestStart\n                 [max]="formGroup.value.sequencingInfo.sequencingLatestStart"\n                 title="Earliest date" i18n-title\n                 formControlName="sequencingEarliestStart">\n          <mat-datepicker-toggle matSuffix [for]="pickEarliestStart"></mat-datepicker-toggle>\n          <mat-datepicker #pickEarliestStart [dateClass]="plainBody"></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field class="wrapper-slim">\n          <mat-label i18n>Sequencing started until</mat-label>\n          <input matInput class="upper-case-date" id="sequencing-latest-start"\n                 [matDatepicker]="pickLatestStart" #inputLatestStart\n                 title="Latest date" i18n-title\n                 [min]="formGroup.value.sequencingInfo.sequencingEarliestStart"\n                 formControlName="sequencingLatestStart">\n          <mat-datepicker-toggle matSuffix [for]="pickLatestStart"></mat-datepicker-toggle>\n          <mat-datepicker #pickLatestStart [dateClass]="plainBody"></mat-datepicker>\n        </mat-form-field>\n      </ng-container>\n\n      <ng-container [formGroup]="formGroup.controls.analysisInfo">\n        <mat-form-field class="wrapper-slim">\n          <mat-label i18n>Analysis completed from</mat-label>\n          <input matInput class="upper-case-date" id="analysis-earliest-completion"\n                 [matDatepicker]="pickEarliestCompletion" #inputEarliestCompletion\n                 [max]="formGroup.value.analysisInfo.analysisLatestCompletion"\n                 title="Earliest date" i18n-title\n                 formControlName="analysisEarliestCompletion">\n          <mat-datepicker-toggle matSuffix [for]="pickEarliestCompletion"></mat-datepicker-toggle>\n          <mat-datepicker #pickEarliestCompletion [dateClass]="plainBody"></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field class="wrapper-slim">\n          <mat-label i18n>Analysis completed until</mat-label>\n          <input matInput class="upper-case-date" id="analysis-latest-completion"\n                 [matDatepicker]="pickLatestCompletion" #inputLatestCompletion\n                 [min]="formGroup.value.analysisInfo.analysisEarliestCompletion"\n                 title="Latest date" i18n-title\n                 formControlName="analysisLatestCompletion">\n          <mat-datepicker-toggle matSuffix [for]="pickLatestCompletion"></mat-datepicker-toggle>\n          <mat-datepicker #pickLatestCompletion [dateClass]="plainBody"></mat-datepicker>\n        </mat-form-field>\n      </ng-container>\n\n    </div>\n\n    <div class="filters-all">\n      <mat-form-field class="wrapper-slim">\n        <mat-label i18n>Matched sample ID</mat-label>\n        <input matInput type="text" id="input-sample-name" #sampleName formControlName="sampleName">\n      </mat-form-field>\n\n      <div class="search-actions">\n        <button mat-raised-button (click)="searchAgain()" i18n>Search</button>\n      </div>\n    </div>\n  </form>\n\n  <mat-divider class="thick"></mat-divider>\n\n  <div class="scrollable">\n    <div class="count-results" *ngIf="nSamplesTotal > -1">\n      <ng-container i18n>\n        {\n          nSamplesTotal,\n          plural,\n          =0 {No samples found.} =1 {Showing one result.} other {Showing {{nSamplesTotal}} results.}\n        }\n      </ng-container>\n      <span i18n>\n        Normal samples must be Tissue, Somatic, Completed, and use the same Panel as the tumor sample.\n      </span>\n    </div>\n\n    <mat-divider *ngIf="nSamplesTotal > -1"></mat-divider>\n\n    <table mat-table [dataSource]="dataSource"\n           class="narrow-cells"\n           id="table-current-samples"\n           matSort>\n\n      // Checkboxes for selecting samples to act on.\n      <ng-container matColumnDef="select">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef="let sample">\n          <mat-checkbox [color]="\'primary\'" (click)="$event.stopPropagation()"\n                        (change)="$event ? toggle(sample) : null"\n                        [disabled]="analyzedAsGermline.has(sample.id)"\n                        [checked]="selection.isSelected(sample)">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef="sampleName">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header i18n>Sample ID</th>\n        <td mat-cell *matCellDef="let sample">{{sample.name}}</td>\n      </ng-container>\n      <ng-container matColumnDef="analysisName">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header i18n>Analysis name</th>\n        <td mat-cell *matCellDef="let sample">{{sample.analysisName}}</td>\n      </ng-container>\n      <ng-container matColumnDef="sampleModifiedBy">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header i18n>Last modified by</th>\n        <td mat-cell *matCellDef="let sample">{{sample.lastModifiedBy}}</td>\n      </ng-container>\n      <ng-container matColumnDef="completedAt">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header i18n>Analysis completed date</th>\n        <td mat-cell *matCellDef="let sample">{{sample.completedAt | sgpDateFormat}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef="columnHeaders"></tr>\n      <tr mat-row *matRowDef="let sample; columns: columnHeaders"\n          [ngClass]="{selected: selection.selected[0]?.id === sample.id}"></tr>\n    </table>\n  </div>\n\n  <mat-divider class="thick"></mat-divider>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-flat-button color="primary" cdkFocusInitial\n          [disabled]="!normalResultId || isSubmitting"\n          (click)="submit()" i18n>\n    Submit tumor/normal analysis\n  </button>\n</div>\n'},"C/Gj":function(e,t){e.exports="/*\n * This is for styles shared by the tables that list different kinds of variant (CNV, SNV, etc.).\n */\n.mat-card {\n  padding: 20px 0 0 0;\n  margin: 0;\n  min-width: 750px;\n  overflow-x: auto;\n}\n.mat-card .mat-card-header {\n  padding: 0 20px;\n}\n.mat-card .mat-card-header:not(:first-child) {\n  margin-top: -8px;\n}\n.mat-card .mat-card-content {\n  display: table;\n  width: 100%;\n}\n.mat-card .mat-card-content table.mat-table {\n  width: 100%;\n}\n.mat-card .mat-card-content table.mat-table th.mat-header-cell[mat-sort-header].numeric-data, .mat-card .mat-card-content table.mat-table th.mat-header-cell[mat-sort-header].iconic-data {\n  padding-right: 2px;\n}\n.mat-card .mat-card-content table.mat-table th.mat-header-cell[mat-sort-header].numeric-data:last-of-type, .mat-card .mat-card-content table.mat-table th.mat-header-cell[mat-sort-header].iconic-data:last-of-type {\n  padding-right: 10px;\n}\n.mat-card .mat-card-content table.mat-table td.mat-cell:last-of-type.numeric-data, .mat-card .mat-card-content table.mat-table td.mat-cell:last-of-type.iconic-data {\n  padding-right: 28px;\n}"},CqoK:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("mrSG"),i=n("8Y7J"),r=n("eRCZ");let s=class{constructor(){this.getColorClass=r.b,this.getContentTypes=r.c}get totalBytes(){return this.usage&&Object.values(this.usage).reduce((e,t)=>e+t,0)||1}getPercentage(e){return this.usage?100*this.usage[e]/Math.max(1,this.totalBytes):0}getTotalWidth(){return 10+2*Math.min(30,Math.log2(this.totalBytes))}};a.a([Object(i.F)()],s.prototype,"usage",void 0),s=a.a([Object(i.n)({selector:"sgp-client-storage-used-bar",template:n("cWIv"),styles:[n("MAkt")]})],s)},Defs:function(e,t,n){"use strict";n.d(t,"a",function(){return a}),n.d(t,"b",function(){return i}),n.d(t,"c",function(){return r});class a{constructor(e,t,n){this.name=e,this.createdAt=void 0,this.sequencerId=t,this.samples=n}}a.ctorParameters=()=>[{type:String},{type:String},{type:Array}];class i extends a{constructor(e,t,n,a,i){super(e,t,i),this.flowcellId=n,this.startedAt=a}}i.ctorParameters=()=>[{type:String},{type:String},{type:String},{type:Date},{type:Array}];class r extends a{constructor(e,t,n,a,i){super(e,t,i),this.fastqFile1=n,this.fastqFile2=a}}r.ctorParameters=()=>[{type:String},{type:String},{type:String},{type:String},{type:Array}]},F1G5:function(e,t){e.exports=".nav-bar {\n  box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.16);\n}\n\n.header.main-header {\n  padding: 20px;\n}\n\nspan.icons-in-header {\n  float: right;\n  height: 1.3em;\n  position: relative;\n  top: -4px;\n}\n\nspan.icons-in-header #roche-logo {\n  margin-left: 20px;\n}\n\nmat-icon.nav {\n  cursor: pointer;\n  margin-right: 20px;\n  margin-left: -4px;\n  vertical-align: bottom;\n}\n\nspan.product-title {\n  font-size: 18px;\n  font-weight: bold;\n  line-height: 22px;\n  padding: 14px 14px 14px 0;\n}\n\nspan.page-title {\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 24px;\n  padding: 14px;\n}\n\nspan.icons-in-header {\n  float: right;\n  position: relative;\n  top: -8px;\n  white-space: nowrap;\n}\n\nspan.icons-in-header .mat-icon-button {\n  position: relative;\n  margin-right: -8px;\n  padding: 0;\n  top: -14px;\n}\n\nspan.icons-in-header .mat-icon-button.account {\n  color: #a5d2ff;\n}\n\nspan.icons-in-header .mat-icon-button .mat-icon {\n  font-size: 24px;\n  height: 24px;\n  width: 24px;\n}"},"FE/b":function(e,t){e.exports='<mat-card>\n  <mat-card-header>\n    <mat-card-title class="icon-with-text">\n      <div fxLayout="row" fxLayoutAlign="space-between center">\n        <mat-icon svgIcon="analysis_results_grey"></mat-icon>\n        <div i18n>Rerun settings</div>\n      </div>\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]="form">\n      <div fxLayout="row" fxLayoutAlign="space-between none">\n        <div fxFlex="50" class="left-column">\n\n          <mat-form-field *ngIf="parameterSets && parameterSets.length">\n            <mat-label i18n>Parameter set</mat-label>\n            <mat-select formControlName="parameterSetId">\n              <mat-option *ngFor="let parameterSet of parameterSets" [value]="parameterSet.id">\n                {{parameterSet.name}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <div formGroupName="parameterSetDetails">\n            <div class="parameter-set-threshold-list">\n              <div fxLayout="row" fxLayoutAlign="space-between none">\n                <div fxFlex="50" class="parameter-set-threshold">\n                  <div>\n                    <span i18n>Indel AF threshold</span>\n                    <div *ngIf="isEditable">\n                      {{parameterSetRanges.indelAfThreshold.min}} - {{parameterSetRanges.indelAfThreshold.max}}\n                    </div>\n                  </div>\n                  <mat-form-field (click)="setCustomParameterSet()">\n                    <input type="number" matInput formControlName="indelAfThreshold" step="0.0001">\n                  </mat-form-field>\n                </div>\n                <div fxFlex="50" class="parameter-set-threshold">\n                  <div>\n                    <span i18n>Read length threshold</span>\n                    <div *ngIf="isEditable">\n                      {{parameterSetRanges.minReadLength.min}} - {{parameterSetRanges.minReadLength.max}}\n                    </div>\n                  </div>\n                  <mat-form-field (click)="setCustomParameterSet()">\n                    <input type="number" matInput formControlName="minReadLength" step="1">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxLayout="row" fxLayoutAlign="space-between none">\n                <div fxFlex="50" class="parameter-set-threshold">\n                  <div>\n                    <span i18n>Indel depth threshold</span>\n                    <div *ngIf="isEditable">\n                      {{parameterSetRanges.indelMinDepth.min}} - {{parameterSetRanges.indelMinDepth.max}}\n                    </div>\n                  </div>\n                  <mat-form-field (click)="setCustomParameterSet()">\n                    <input type="number" matInput formControlName="indelMinDepth" step="1">\n                  </mat-form-field>\n                </div>\n                <div fxFlex="50" class="parameter-set-threshold">\n                  <div>\n                    <span i18n>Base quality threshold</span>\n                    <div *ngIf="isEditable">\n                      {{parameterSetRanges.baseQuality.min}} - {{parameterSetRanges.baseQuality.max}}\n                    </div>\n                  </div>\n                  <mat-form-field (click)="setCustomParameterSet()">\n                    <input type="number" matInput formControlName="baseQuality" step="1">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxLayout="row" fxLayoutAlign="space-between none">\n                <div fxFlex="50" class="parameter-set-threshold">\n                  <div>\n                    <span i18n>SNV AF threshold</span>\n                    <div *ngIf="isEditable">\n                      {{parameterSetRanges.snvAfThreshold.min}} - {{parameterSetRanges.snvAfThreshold.max}}\n                    </div>\n                  </div>\n                  <mat-form-field (click)="setCustomParameterSet()">\n                    <input type="number" matInput formControlName="snvAfThreshold" step="0.001">\n                  </mat-form-field>\n                </div>\n                <div fxFlex="50" class="parameter-set-threshold">\n                  <div>\n                    <span i18n>Mapping quality threshold</span>\n                    <div *ngIf="isEditable">\n                      {{parameterSetRanges.mappingQuality.min}} - {{parameterSetRanges.mappingQuality.max}}\n                    </div>\n                  </div>\n                  <mat-form-field (click)="setCustomParameterSet()">\n                    <input type="number" matInput formControlName="mappingQuality" step="1">\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxLayout="row" fxLayoutAlign="space-between none">\n                <div fxFlex="50" class="parameter-set-threshold">\n                  <div>\n                    <span i18n>SNV depth threshold</span>\n                    <div *ngIf="isEditable">\n                      {{parameterSetRanges.snvMinDepth.min}} - {{parameterSetRanges.snvMinDepth.max}}\n                    </div>\n                  </div>\n                  <mat-form-field (click)="setCustomParameterSet()">\n                    <input type="number" matInput formControlName="snvMinDepth" step="1">\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n            <mat-form-field *ngIf="pipelineReleases && pipelineReleases.length" (click)="setCustomParameterSet()">\n              <mat-label i18n>Pipeline version</mat-label>\n              <mat-select formControlName="pipelineReleaseId">\n                <mat-option *ngFor="let pipeline of pipelineReleases" [value]="pipeline.id">\n                  {{pipeline.name}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="50" class="right-column">\n          <mat-form-field *ngIf="backgrounds && backgrounds.length">\n            <mat-label i18n>Background</mat-label>\n            <mat-select formControlName="backgroundId">\n              <mat-option *ngFor="let background of backgrounds" [value]="background.id">\n                {{background.name}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </form>\n  </mat-card-content>\n  <mat-card-footer>\n    <div class="warning" i18n>\n      We recommend using custom backgrounds always with the same parameter set that was used when analyzing the samples from which\n      the background was generated.\n    </div>\n  </mat-card-footer>\n</mat-card>\n'},G6RG:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("mrSG"),i=n("8Y7J"),r=n("eRCZ");let s=class{constructor(){this.getCaption=r.a,this.getColorClass=r.b,this.getContentTypes=r.c}ngOnInit(){}};a.a([Object(i.F)()],s.prototype,"usage",void 0),s=a.a([Object(i.n)({selector:"sgp-client-usage-legend",template:n("Nm5Y"),styles:[n("nlSU"),n("a+6N")]})],s)},GUBM:function(e,t,n){"use strict";n.d(t,"a",function(){return l}),n.d(t,"b",function(){return c}),n.d(t,"c",function(){return d});var a=n("iInd"),i=n("LRne"),r=(n("zJX5"),n("i25u"));n("wmI8"),n("/5w7");const s="result01";class o extends a.b{constructor(e){super(),this.data=e,this.queryParams={showSearch:"false"},this.params={resultId:s,id:s}}set routeConfig(e){}get routeConfig(){return{path:"sample/list"}}get parent(){return this}get pathFromRoot(){return[this]}get firstChild(){return this}get children(){return[this]}}o.ctorParameters=()=>[{type:void 0}];class l extends a.a{constructor(){super(),this.internalSnapshot=new o({user:Object(r.a)(98)}),this.data=Object(i.a)({value:{hideTabs:!1}})}get snapshot(){return this.internalSnapshot}get parent(){return this}get firstChild(){return this}get children(){return[this]}get paramMap(){return Object(i.a)()}}class c extends l{constructor(){super(),this.internalSnapshot=new o({bulkdDownload:{canBulkDownload:!0,totalBytes:3456789}})}}class d extends l{constructor(e,t){super(),this.internalSnapshot=new o({panel:e,backgrounds:t}),this.internalSnapshot.url=[]}get firstChild(){return this}}d.ctorParameters=()=>[{type:void 0},{type:Array}]},H4XA:function(e,t){e.exports=".user-supplied {\n  word-break: break-all;\n}\n\ndiv.date-time {\n  word-break: break-word;\n}\n\n.metadata > div {\n  color: #191919;\n  margin-bottom: 20px;\n}\n\n.metadata > div .name {\n  font-size: 12px;\n  font-weight: normal;\n  color: #bababa;\n}"},IIrX:function(e,t){e.exports='<div>\n    <sas-user-details [user]="newUser"\n                      (canSave)="canSave=$event"\n                      [highlightErrors]="highlightErrors">\n    </sas-user-details>\n</div>\n\n<div class="page-fixed-footer">\n    <div class="page-container page-footer-container" fxLayout="row" fxLayoutAlign="end center">\n        <div class="highlight-errors" (mouseover)="highlightErrors = !!$event">\n            <button class="mat-flat-button" id="add-user"\n                    mat-button color="primary"\n                    (click)="onSave()" [disabled]="!canSave"\n                    i18n> Add\n            </button>\n        </div>\n    </div>\n</div>\n<div class="spacer-for-footer"></div>\n'},IM3n:function(e,t){e.exports='<button type="button" mat-raised-button (click)="cancel()" [disabled]="disabled">\n  <mat-icon fontIcon="md-warning"></mat-icon>\n  <ng-container i18n>Cancel analysis</ng-container>\n</button>\n'},"IbL+":function(e,t){e.exports=".mat-card-title {\n  word-break: break-all;\n}\n\n#slider-background-default {\n  margin-right: 10px;\n  padding-top: 5px;\n}\n\n#download-log-file {\n  position: absolute;\n  right: 20px;\n  white-space: normal;\n  line-height: 1.5em;\n  padding: 0.5em;\n}"},IfGB:function(e,t,n){"use strict";n.d(t,"b",function(){return s}),n.d(t,"a",function(){return o});var a=n("4TB1"),i=n("zJX5");function r(e=0){const t=Object.values(a.a)[(2+e)%7],n=new Date(2019,8,e+10,3+e,4+e,10),i=new Date(2019,8,e+11,3+e,4+e,10);return{id:`analysis-${e}`,name:"MMM-NNN_JJ-".repeat(e)+e,numberOfSamples:20+e,status:t,createdAt:n.toISOString(),completedAt:i.toISOString(),elapsedTime:"PT21H25M55.626S"}}function s(e=0){const t=r(e),n=new Date(2019,8,e+11,3,4+e,5);return{id:t.id,name:t.name,samples:Object(i.e)(20+e).content,status:t.status,createdAt:t.createdAt,completedAt:t.completedAt,elapsedTime:t.elapsedTime,sequencer:{id:`sequencerId-${e}`,name:`sequencerName-${e}`,machineName:`machineName-${e}`},flowcellId:`flowcellId-${e}`,startedAt:n.toISOString()}}function o(e){const t=Array(e);return t.fill({}),t.map((e,t)=>r(t))}},JDXJ:function(e,t,n){"use strict";n.d(t,"a",function(){return r});var a=n("mrSG"),i=n("8Y7J");let r=class{constructor(){}ngOnInit(){this.minimumIsInclusive=null!=this.range.minimum,this.minimum=this.minimumIsInclusive?this.range.minimum:this.range.exclusiveMinimum,this.hasMinimum=this.minimumIsInclusive||null!=this.range.exclusiveMinimum,this.maximumIsInclusive=null!=this.range.maximum,this.maximum=this.maximumIsInclusive?this.range.maximum:this.range.exclusiveMaximum,this.hasMaximum=this.maximumIsInclusive||null!=this.range.exclusiveMaximum,this.isSingleValue=this.minimumIsInclusive&&this.maximumIsInclusive&&this.minimum===this.maximum}};a.a([Object(i.F)()],r.prototype,"range",void 0),r=a.a([Object(i.n)({selector:"sas-numeric-range",template:n("Zx37"),styles:[n("td/f")]})],r)},K8J7:function(e,t){e.exports='<div class="analysis-tile" fxFlex fxLayout="column" id="analysis-tile-{{analysis.name}}" (click)="goToDetail()">\n  <div class="color-name" [ngClass]="statusClass" fxLayout="row" fxLayoutAlign="space-between center">\n    <sgp-client-analysis-icon [color]="statusColor"></sgp-client-analysis-icon>\n    <div class="name">{{analysis.name}}</div>\n  </div>\n  <div class="samples">\n    <span class="sample-count">{{analysis.numberOfSamples}}</span>\n    <span class="caption" i18n>Samples</span>\n  </div>\n  <div class="status">\n    <div class="caption" i18n>Status</div>\n    {{analysis.status | analysisStatusLabel}}\n    <mat-icon [ngClass]="statusClass" fontIcon="{{statusIcon}}" *ngIf="!inProgress"></mat-icon>\n    <mat-spinner diameter="24" *ngIf="inProgress"></mat-spinner>\n  </div>\n  <div class="timing elapsed" *ngIf="inProgress">\n    <div class="caption" i18n>Elapsed</div>\n    {{analysis.elapsedTime | durationTime}}\n  </div>\n  <div class="timing date" *ngIf="!inProgress">\n    <div class="caption">{{analysis.status | analysisStatusLabel}}</div>\n    <ng-container *ngIf="!analysisCompletedToday && !analysisCompletedYesterday">\n      {{analysis.completedAt | sgpDateFormat}}\n    </ng-container>\n    <ng-container *ngIf="analysisCompletedToday">\n      {{analysis.completedAt | date:\'shortTime\'}}\n    </ng-container>\n    <ng-container *ngIf="analysisCompletedYesterday">\n      Yesterday, {{analysis.completedAt | date:\'shortTime\'}}\n    </ng-container>\n  </div>\n</div>\n'},Kqsk:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("mrSG"),i=n("8Y7J"),r=n("n5xw");let s=class{constructor(e){this.associatedFileService=e}ngOnInit(){}getDownloadUrl(e){return this.associatedFileService.getDownloadUrl(e)}download(e){window.open(this.getDownloadUrl(e.id),"_blank")}};s.ctorParameters=()=>[{type:r.a}],a.a([Object(i.F)()],s.prototype,"title",void 0),a.a([Object(i.F)()],s.prototype,"files",void 0),s=a.a([Object(i.n)({selector:"sgp-client-sample-files-type",template:n("rZVo"),styles:[n("QEaw")]})],s)},LG6j:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var a=n("LRne");class i{getBulkDownloadUrl(e){return"fake_bulk_download"}getCanBulkDownload(e){return Object(a.a)({canBulkDownload:!0,totalBytes:123456789012})}}},M0RR:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("wmI8"),i=n("/5w7"),r=n("KZpf");const s={id:"someId",createdAt:"never",generateBackground:!1,types:[a.a.CNV],barcode:{id:"1",name:"barcode1"},type:i.e.PLASMA,applicationMode:i.b.GERMLINE,panel:r.a[0],isolatedMass:1,inputMass:2.2,plasmaVolume:3,qratio:4,umi:!1,status:i.c.ANALYZING,background:null,parameterSet:{id:"dummy",name:"Default parameterSet",createdBy:"none",createdAt:"never",indelAfThreshold:.002,indelMinDepth:100,snvAfThreshold:0,snvMinDepth:50,minReadLength:30,baseQuality:30,mappingQuality:20,parameterSetDefault:!1,archived:!1,rocheCatalog:!1,pipelineRelease:{id:"dummy",name:"Default pipeline"}},normalSampleResult:{sampleId:"5555555",id:"555000555",sampleName:"Abby Normal",createdAt:"2019-08-19T12:34:56Z"},tumorSampleResult:{sampleId:"209018245",id:"555000556",sampleName:"Gabby Tumor",createdAt:"2019-08-19T21:33:57Z"},lastModifiedBy:"Paul"}},MAkt:function(e,t){e.exports=".bar {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-direction: row;\n  -webkit-box-pack: start;\n          justify-content: flex-start;\n}\n\n.usage {\n  display: inline-block;\n  border: 0.4px solid white;\n  border-radius: 1px;\n  height: 40px;\n  padding: 0 1px;\n}\n\n.usage:first-child {\n  border-bottom-left-radius: 10px;\n  border-top-left-radius: 10px;\n}\n\n.usage:last-child {\n  border-bottom-right-radius: 10px;\n  border-top-right-radius: 10px;\n}\n\n.usage.demux {\n  background-color: #058ccf;\n}\n\n.usage.result {\n  background-color: #ffb380;\n}\n\n.usage.trash {\n  background-color: #a254a8;\n}"},Nm5Y:function(e,t){e.exports='<div fxLayout="row" fxLayoutAlign="none end">\n  <table>\n    <tr *ngFor="let contentType of getContentTypes(usage)" [id]="\'legend-\'+contentType">\n      <td><div class="usage" [ngClass]="getColorClass(contentType)"></div></td>\n      <td><div class="caption">{{getCaption(contentType)}}</div></td>\n      <td><div class="amount">{{usage[contentType] | fileSize}}</div></td>\n    </tr>\n  </table>\n  <a routerLink="/sample/list" [queryParams]="{trashed: true}" mat-raised-button>Browse trash folder</a>\n</div>\n'},Oxkd:function(e,t){e.exports='<div class="no-variants">\n  <ng-container [ngSwitch]="reason">\n    <span *ngSwitchCase="WhyNoVariants.NONE_DETECTED"><ng-container i18n>There are no </ng-container>{{kind}}<ng-container i18n> to display.</ng-container></span>\n    <span *ngSwitchCase="WhyNoVariants.ERROR_FETCHING" i18n>There was an error. Results are not available right now.</span>\n\x3c!-- Not yet implemented.\n    <span *ngSwitchCase="2">All {{kind}} are currently hidden.</span>\n    <span *ngSwitchCase="3">Panel has not generated a background file.</span>\n--\x3e\n  </ng-container>\n</div>\n'},QEaw:function(e,t){e.exports=".header-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.header-page-title {\n  font-size: 18px;\n  font-weight: normal;\n  color: #191919;\n}\n\n.table-name {\n  font-size: 24px;\n  font-weight: normal;\n  color: #191919;\n  line-height: 24px;\n}\n\n.card-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.card-body {\n  font-size: 14px;\n  font-weight: normal;\n  color: #4d4d4d;\n}\n\n.body-1 {\n  font-size: 14px;\n  font-weight: normal;\n  color: #191919;\n}\n\n.body-2 {\n  font-size: 14px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.rss-c1 {\n  background-color: #0066cc;\n}\n\n.rss-c2 {\n  background-color: #191919;\n}\n\n.rss-c3 {\n  background-color: white;\n}\n\n.rss-cx {\n  background-color: #f2f6fc;\n}\n\n.rss-c10 {\n  background-color: #333333;\n}\n\n.rss-c11 {\n  background-color: #4d4d4d;\n}\n\n.rss-c12 {\n  background-color: #8d8d8d;\n}\n\n.rss-c13 {\n  background-color: #bababa;\n}\n\n.rss-c14 {\n  background-color: lightgray;\n}\n\n.rss-c15 {\n  background-color: #e8e8e8;\n}\n\n.rss-c16 {\n  background-color: #efefef;\n}\n\n.rss-c17 {\n  background-color: #fafafa;\n}\n\n.rss-c20 {\n  background-color: #004ea3;\n}\n\n.rss-c22 {\n  background-color: #cce0ff;\n}\n\n.rss-c23 {\n  background-color: #ffff99;\n}\n\n.rss-c30 {\n  background-color: #009966;\n}\n\n.rss-c31 {\n  background-color: #ffc414;\n}\n\n.rss-c32 {\n  background-color: #cc0033;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  background-color: #f2f6fc;\n}\n\nbody.white-background {\n  background-color: white;\n}\n\n.rss-link {\n  color: #191919;\n  text-decoration: underline;\n}\n\n.rss-link:hover {\n  color: #004ea3;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.rss-highlight-on-hover {\n  border: 1px solid transparent;\n}\n\n.rss-highlight-on-hover:hover {\n  background-color: rgba(232, 232, 232, 0.5);\n  border-color: #8d8d8d;\n}\n\nmat-card {\n  margin-bottom: 20px;\n  margin-right: 0;\n}\n\nmat-card mat-card-content {\n  background-color: white;\n}\n\nmat-list {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-direction: row;\n  flex-wrap: wrap;\n}\n\nmat-list-item {\n  flex-basis: 50%;\n  margin-bottom: 10px;\n}\n\nmat-list-item a {\n  color: inherit;\n  cursor: pointer;\n  text-decoration: inherit;\n}\n\nmat-list-item p {\n  color: #8d8d8d;\n}\n\nmat-list-item.file {\n  cursor: pointer;\n}\n\nmat-list-item.file .mat-list-icon {\n  font-size: 36px;\n  width: 36px;\n  height: 36px;\n}\n\nmat-list-item.file .mat-list-icon mat-icon {\n  font-size: 36px;\n  width: 36px;\n  height: 36px;\n}"},QO9K:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("mrSG"),i=n("8Y7J"),r=n("0grb");let s=class{constructor(e){this.apiService=e,this.SAMPLES_RESULTS_PATH="/sample-results"}getAssociatedFileApiPath(e){return`${this.SAMPLES_RESULTS_PATH}/${e}/associated-files`}getWarningsApiPath(e){return`${this.SAMPLES_RESULTS_PATH}/${e}/warnings`}getAssociatedFiles(e){return this.apiService.get(this.getAssociatedFileApiPath(e))}getBulkDownloadUrl(e){return`${r.a.SERVER_URI}${this.SAMPLES_RESULTS_PATH}/${e}:bulk-download`}getCanBulkDownload(e){return this.apiService.get(`${this.SAMPLES_RESULTS_PATH}/${e}:can-bulk-download`)}setGenerateBackground(e,t){return this.apiService.post(`${this.SAMPLES_RESULTS_PATH}/${e}:mark`,{enabled:t})}getAssociatedFilesForGenomeBrowser(e){return this.apiService.get(`${this.getAssociatedFileApiPath(e)}/genome-browser/url`)}getWarnings(e){return this.apiService.get(this.getWarningsApiPath(e))}delete(e){return this.apiService.delete(`${this.SAMPLES_RESULTS_PATH}/${e}`)}cancel(e){return this.apiService.put(`${this.SAMPLES_RESULTS_PATH}/${e}:cancel`)}static assembleErrorMessage(e){return r.a.assembleErrorMessage(e,"SampleResultService")}};s.ctorParameters=()=>[{type:r.a}],s=a.a([Object(i.C)({providedIn:"root"})],s)},QscJ:function(e,t,n){"use strict";var a=n("mrSG"),i=n("8Y7J"),r=n("8bJo"),s=n("s6ns"),o=n("7kcP"),l=n("Xd0L"),c=n("8rEH"),d=n("s7LF"),m=n("iInd"),p=n("fgD+"),u=n("XNiG"),h=n("1G5W"),g=n("/5w7"),f=n("tgUf"),b=n("0grb");class v{constructor(e,t){this.tumorSampleResultId=e,this.normalSampleResultId=t}}v.ctorParameters=()=>[{type:String},{type:String}];let x=class{constructor(e){this.apiService=e,this.TUMOR_NORMAL_PATH="/tumor-normal"}submitAnalysis(e,t){const n=new v(e,t);return this.apiService.post(this.TUMOR_NORMAL_PATH,n)}assembleErrorMessage(e){return b.a.assembleErrorMessage(e,"TumorNormalAnalysisService")}};x.ctorParameters=()=>[{type:b.a}],x=a.a([Object(i.C)({providedIn:"root"})],x);var y,S=n("tTFL"),w=n("81Y3");class k{}n.d(t,"a",function(){return I});let I=y=class{constructor(e,t,n,a,i,s,o,l){this.dialogRef=e,this.formBuilder=n,this.tumorNormalAnalysisService=a,this.route=i,this.router=s,this.snackBarService=o,this.sampleService=l,this.constants={completed:g.d.COMPLETED,tissueDna:g.e.TISSUE},this.selection=new r.c(!1,[]),this.fixedFilters={sampleStatus:g.d.COMPLETED,sampleType:g.e.TISSUE,trashed:"false",samplePanel:null,sampleMode:g.b.SOMATIC},this.searchFilters={},this.nSamplesTotal=-1,this.analyzedAsGermline=new Set,this.ngUnsubscribe=new u.a,this.tumorSample=t.tumorSample,this.tumorSampleResult=t.tumorSampleResult,this.buildFormGroup()}static sortByHeader(e,t){switch(t){case"sampleName":return e.name;case"analysisName":return e.analysisName;case"sampleModifiedBy":return e.lastModifiedBy;case"completedAt":return e.completedAt;case"createdAt":return e.createdAt;default:return""}}ngOnInit(){this.ngOnChanges()}ngOnChanges(){this.fixedFilters.samplePanel=this.tumorSampleResult.panel&&this.tumorSampleResult.panel.name,this.searchFilters.sampleName=this.tumorSample.name,this.formGroup.patchValue({sampleName:this.tumorSample.name})}get columnHeaders(){return["select",...y.SHOW_COLUMNS_ALWAYS]}get today(){return y.today}buildFormGroup(){const e=this.formBuilder;this.formGroup=e.group({sampleName:e.control(this.searchFilters.sampleName),sequencingInfo:e.group({sequencingEarliestStart:e.control(this.searchFilters["startedAt.from"]),sequencingLatestStart:e.control(this.searchFilters["startedAt.to"])}),analysisInfo:e.group({analysisEarliestCompletion:e.control(this.searchFilters["completedAt.from"]),analysisLatestCompletion:e.control(this.searchFilters["completedAt.to"])})})}filterSamples(){const e=w.a.FORM_CONTROL_NAME_TO_API_PARAMETER_NAME,t=Object.entries(this.searchFilters).map(([t,n])=>e[t]?{[e[t]]:n}:{}),n=Object.entries(this.fixedFilters).map(([t,n])=>e[t]?{[e[t]]:n}:{}),a=Object.assign({},...t,...n);this.sampleService.filterAll(0,2e3,a,"name").subscribe(e=>{const t=e.content.filter(e=>e.id!==this.tumorSample.id);this.nSamplesTotal=e.totalElements+t.length-e.content.length,this.createDataSource(t)})}createDataSource(e){this.dataSource=new c.a(e),this.dataSource.sort=this.sort,this.sort.active="createdAt",this.sort.direction="desc",this.dataSource.sortingDataAccessor=y.sortByHeader}searchAgain(){this.searchFilters=Object.assign({sampleName:this.formGroup.value.sampleName},...Object.entries(this.formGroup.value.analysisInfo).map(([e,t])=>t?{[e]:f.a.convertValue(e,t)}:{}),...Object.entries(this.formGroup.value.sequencingInfo).map(([e,t])=>t?{[e]:f.a.convertValue(e,t)}:{})),this.filterSamples()}toggle(e){const t=this.selection.isSelected(e);this.selection.clear(),this.normalResultId=null,t||(this.selection.select(e),this.sampleService.get(e.id).pipe(Object(h.a)(this.ngUnsubscribe)).subscribe(e=>{const t=e.sampleResults.sort((e,t)=>t.createdAt.localeCompare(e.createdAt));this.normalResultId=t[0].id}))}submit(){this.isSubmitting=!0;const e=this.tumorNormalAnalysisService;e.submitAnalysis(this.tumorSampleResult.id,this.normalResultId).pipe(Object(h.a)(this.ngUnsubscribe)).subscribe(e=>{this.isSubmitting=!1,this.dialogRef.close(e)},t=>{this.snackBarService.error(`Could not submit: ${e.assembleErrorMessage(t)}`),this.isSubmitting=!1})}ngOnDestroy(){this.ngUnsubscribe.next(),this.ngUnsubscribe.complete()}plainBody(e){}};I.SHOW_COLUMNS_ALWAYS=["sampleName","analysisName","sampleModifiedBy","completedAt"],I.ctorParameters=()=>[{type:s.d},{type:k,decorators:[{type:i.B,args:[s.a]}]},{type:d.b},{type:x},{type:m.a},{type:m.i},{type:S.a},{type:f.a}],a.a([Object(i.lb)(o.a,{static:!0})],I.prototype,"sort",void 0),I=y=a.a([Object(i.n)({selector:"sgp-client-choose-match-sample",template:n("BhIG"),providers:[{provide:l.c,useClass:p.a,deps:[l.g]},{provide:l.f,useValue:{parse:{dateInput:"DD-MMM-YYYY"},display:{dateInput:"DD-MMM-YYYY",monthYearLabel:"MMM YYYY"}}}],styles:[n("xu4N"),n("ahNN")]}),a.b(1,Object(i.B)(s.a))],I)},"R+Wc":function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("mrSG"),i=n("8Y7J"),r=n("1zax");let s=class{constructor(){}ngOnInit(){}get roleName(){return r.a[this.role]}get presence(){return this.present?"present":"absent"}};a.a([Object(i.F)()],s.prototype,"role",void 0),a.a([Object(i.F)()],s.prototype,"present",void 0),s=a.a([Object(i.n)({selector:"sas-role-presence",template:n("0O5H"),styles:[n("3it/")]})],s)},Uown:function(e,t){e.exports=".mat-card {\n  padding: 10px 20px;\n  margin-right: 0;\n}\n.mat-card .mat-card-title {\n  color: #8d8d8d;\n  font-size: 12px;\n  font-weight: normal;\n  max-width: 200px;\n  overflow-wrap: break-word;\n}\n.mat-card .mat-card-content .threshold {\n  background-color: white;\n}\n.mat-card .mat-card-content .threshold .mat-icon {\n  margin: 5px 10px 5px 0;\n}\n.mat-card .mat-card-content .threshold sas-numeric-range {\n  position: relative;\n  top: -8px;\n}"},V7Wo:function(e,t,n){"use strict";n.d(t,"a",function(){return l});var a=n("mrSG"),i=n("8Y7J"),r=n("qNuh"),s=n("4h67");const o=Object.values(r.a);let l=class{constructor(){}ngOnInit(){this.sortedThresholds=(this.metric.thresholds||[]).sort((e,t)=>o.indexOf(e.status)-o.indexOf(t.status))}iconForStatus(e){return s.a.forStatus(e)}};l.HSPACE_NEEDED=240,a.a([Object(i.F)()],l.prototype,"metric",void 0),a.a([Object(i.F)()],l.prototype,"caption",void 0),l=a.a([Object(i.n)({selector:"sgp-client-thresholds",template:n("ht/x"),styles:[n("Uown"),n("l/3q")]})],l)},VlsF:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var a=n("mrSG"),i=n("8Y7J"),r=n("8rEH"),s=n("7kcP");let o=class{constructor(){this.examine=new i.w,this.startNewBackground=new i.w,this.columnHeaders=["status","name","createdAt","backgroundDefault","type"],this.dataSource=new r.a}ngOnChanges(){this.dataSource.data=this.backgrounds||[]}ngOnInit(){this.dataSource.data=this.backgrounds||[],this.dataSource.sort=this.sort}iconFor(e){switch(e){case"FAILED":return"error";case"COMPLETED":return"check";default:return"Unexpected status for background"}}};a.a([Object(i.F)()],o.prototype,"backgrounds",void 0),a.a([Object(i.R)()],o.prototype,"examine",void 0),a.a([Object(i.R)()],o.prototype,"startNewBackground",void 0),a.a([Object(i.lb)(s.a,{static:!0})],o.prototype,"sort",void 0),o=a.a([Object(i.n)({selector:"sgp-client-background-table",template:n("7svx"),styles:[n("1jmG")]})],o)},XQJ5:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var a=n("mrSG"),i=n("8Y7J"),r=n("qNuh"),s=n("tgUf");let o=class{constructor(e){this.sampleService=e}ngOnInit(){this.sampleService.getResultQcMetrics(this.resultId).subscribe(e=>{this.metricsViolated=[...e.analysis,...e.sample].filter(e=>e.status===r.a.ERROR).map(e=>{const t=this.findThresholdViolated(e);return{name:e.name,range:t&&t.range}})})}findThresholdViolated(e){return(e.thresholds||[]).find(e=>e.range.containsCurrentValue)}};o.CRITICAL_CHECKPOINT_NAMES=["% read pairs binned to sample","Number of read pairs","Unique depth","% reads on-target","% Panel exon region >= 300X","% Panel exon region >= 1000X","Sequencing depth","Number of read pairs per lane"],o.ctorParameters=()=>[{type:s.a}],a.a([Object(i.F)()],o.prototype,"sample",void 0),a.a([Object(i.F)()],o.prototype,"resultId",void 0),o=a.a([Object(i.n)({selector:"sgp-client-sample-error-card",template:n("c+L+"),styles:[n("gioS")]})],o)},XSZ0:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("I65S"),i=n("ej43"),r=n("F+/O");class s extends i.a{constructor(){super(null,null)}isAuthenticated(){return Object(a.of)(!0)}get currentUser(){return{email:"doupnika@roche.com",roles:[r.c.ADMINISTRATOR]}}showLogin(){}}},Xobo:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("1vCo"),i=n("LRne");const r=[{id:"id_token1",name:"the first token",token:"sdgw5hgresvw53getgsebxdfbhm6u365e",lastConnected:"2019-09-16T08:11:22.333Z",createdAt:"2019-09-13T18:31:55.836Z",createdBy:"treitelr"}];class s extends a.b{getAll(){return Object(i.a)(r)}delete(){return Object(i.a)(void 0)}}},Zx37:function(e,t){e.exports="<ng-container *ngIf=\"isSingleValue\">\n  {{minimum}}\n</ng-container>\n<ng-container *ngIf=\"!isSingleValue && hasMinimum\">\n  <ng-container *ngIf=\"!hasMaximum\">\n    {{minimumIsInclusive ? '&ge;' : '&gt;'}}\n    {{minimum}}\n  </ng-container>\n  <ng-container *ngIf=\"hasMaximum\">\n    {{minimumIsInclusive ? '[' : '('}}{{minimum}}\n    ..\n    {{maximum}}{{maximumIsInclusive ? ']' : ')'}}\n  </ng-container>\n</ng-container>\n<ng-container *ngIf=\"!hasMinimum\">\n  <ng-container *ngIf=\"!hasMaximum\">-</ng-container>\n  <ng-container *ngIf=\"hasMaximum\">\n    {{maximumIsInclusive ? '&le;' : '&lt;'}}\n    {{maximum}}\n  </ng-container>\n</ng-container>\n"},"a+6N":function(e,t){e.exports=".usage.demux {\n  background-color: #058ccf;\n}\n.usage.result {\n  background-color: #ffb380;\n}\n.usage.trash {\n  background-color: #a254a8;\n}"},ahNN:function(e,t){e.exports=".subtitle {\n  margin-bottom: 10px;\n}\n\n.filters-all {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n          flex-direction: row;\n  -webkit-box-pack: justify;\n          justify-content: space-between;\n  flex-wrap: nowrap;\n}\n\n.filters-all .wrapper-slim {\n  width: 22%;\n}\n\n.mat-dialog-title {\n  font-size: 18px;\n  font-weight: bold;\n  line-height: 1.5em;\n  margin-bottom: 1em;\n}\n\n.mat-dialog-title button {\n  float: right;\n  position: relative;\n  left: 12px;\n  top: -7px;\n  line-height: 16px;\n}\n\ndiv > form, .mat-dialog-actions {\n  margin: 10px 0;\n}\n\ndiv > .mat-table {\n  box-shadow: none;\n  margin: 10px 0 0 0;\n  width: 100%;\n}\n\ndiv > .mat-divider.thick {\n  border-top-width: 2px;\n}\n\n.search-actions {\n  position: relative;\n  top: -5px;\n}\n\n.mat-dialog-actions {\n  margin-top: 20px;\n}\n\n.mat-dialog-actions, .search-actions {\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: reverse;\n          flex-direction: row-reverse;\n  -webkit-box-align: center;\n          align-items: center;\n  margin-bottom: 0;\n  min-height: unset;\n  padding: 0;\n}\n\n.count-results {\n  font-size: 14px;\n  font-weight: normal;\n  margin: 10px 20px;\n}\n\n.scrollable {\n  overflow-y: auto;\n}\n\n@media (min-height: 1000px) {\n  .scrollable {\n    height: 64vh;\n  }\n}\n\n@media (max-height: 1000px) {\n  .scrollable {\n    height: 60vh;\n  }\n}\n\n@media (max-height: 900px) {\n  .scrollable {\n    height: 56vh;\n  }\n}\n\n@media (max-height: 800px) {\n  .scrollable {\n    height: 50vh;\n  }\n}\n\n@media (max-height: 700px) {\n  .scrollable {\n    height: 43vh;\n  }\n}\n\n@media (max-height: 600px) {\n  .scrollable {\n    height: 35vh;\n  }\n}\n\ntable.mat-table tr.mat-row {\n  cursor: default;\n}"},arem:function(e,t,n){"use strict";var a=n("mrSG"),i=n("8Y7J"),r=n("s7LF"),s=n("XNiG"),o=n("1G5W");const l={indelAfThreshold:{min:5e-4,max:.1},indelMinDepth:{min:50,max:500},snvAfThreshold:{min:0,max:.1},snvMinDepth:{min:20,max:500},minReadLength:{min:20,max:50},baseQuality:{min:20,max:40},mappingQuality:{min:0,max:60}};n.d(t,"a",function(){return d});const c={emitEvent:!1};let d=class{constructor(e){this.fb=e,this.onParameterSetChange=new i.w,this.onBackgroundChange=new i.w,this.allowCustomParameterSet=!1,this.form=this.fb.group({parameterSetId:[{value:null}],parameterSetDetails:this.fb.group({indelAfThreshold:[null,[r.l.min(l.indelAfThreshold.min),r.l.max(l.indelAfThreshold.max)]],minReadLength:[null,[r.l.min(l.minReadLength.min),r.l.max(l.minReadLength.max)]],indelMinDepth:[null,[r.l.min(l.indelMinDepth.min),r.l.max(l.indelMinDepth.max)]],baseQuality:[null,[r.l.min(l.baseQuality.min),r.l.max(l.baseQuality.max)]],snvAfThreshold:[null,[r.l.min(l.snvAfThreshold.min),r.l.max(l.snvAfThreshold.max)]],mappingQuality:[null,[r.l.min(l.mappingQuality.min),r.l.max(l.mappingQuality.max)]],snvMinDepth:[null,[r.l.min(l.snvMinDepth.min),r.l.max(l.snvMinDepth.max)]],pipelineReleaseId:[null]}),backgroundId:[{value:null}]}),this.parameterSetRanges=l,this.isEditable=!1,this.ngUnsubscribe=new s.a}ngOnInit(){this.form.get("backgroundId").valueChanges.pipe(Object(o.a)(this.ngUnsubscribe)).subscribe(e=>{if(this.backgrounds){const t=this.backgrounds.find(t=>t.id===e);this.onBackgroundChange.emit(t)}}),this.form.get("parameterSetId").valueChanges.pipe(Object(o.a)(this.ngUnsubscribe)).subscribe(e=>{if(this.parameterSets){const t=this.parameterSets.find(t=>t.id===e);t===this.customParameterSet?this.enableParameterSetDetails():this.disableParameterSetDetails(),this.onParameterSetChange.emit(t),this.setFormParameterSetDetails(t)}}),this.form.get("parameterSetDetails").valueChanges.pipe(Object(o.a)(this.ngUnsubscribe)).subscribe(e=>{let t=null;this.pipelineReleases&&(t=this.pipelineReleases.find(t=>t.id===e.pipelineReleaseId)),this.customParameterSet.indelAfThreshold=e.indelAfThreshold,this.customParameterSet.indelMinDepth=e.indelMinDepth,this.customParameterSet.snvAfThreshold=e.snvAfThreshold,this.customParameterSet.snvMinDepth=e.snvMinDepth,this.customParameterSet.minReadLength=e.minReadLength,this.customParameterSet.baseQuality=e.baseQuality,this.customParameterSet.mappingQuality=e.mappingQuality,this.customParameterSet.pipelineRelease=t,this.onParameterSetChange.emit(this.customParameterSet)}),this.disableParameterSetDetails()}ngOnChanges(e){if(e.sampleResult&&this.allowCustomParameterSet&&(this.customParameterSet=this.buildCustomParameterSet()),e.parameterSets&&(this.parameterSets=e.parameterSets.currentValue,this.parameterSets&&this.allowCustomParameterSet&&(this.parameterSets=this.parameterSets.concat([this.customParameterSet]))),e.selectedParameterSetId&&(this.selectedParameterSetId=e.selectedParameterSetId.currentValue,this.parameterSets)){const e=this.parameterSets.find(e=>e.id===this.selectedParameterSetId);e&&this.setFormParameterSet(e)}e.selectedBackgroundId&&(this.selectedBackgroundId=e.selectedBackgroundId.currentValue,this.setFormBackgroundId(this.selectedBackgroundId)),e.defaultPipelineRelease&&(this.defaultPipelineRelease=e.defaultPipelineRelease.currentValue,this.allowCustomParameterSet&&(this.customParameterSet.pipelineRelease=this.defaultPipelineRelease))}ngOnDestroy(){this.ngUnsubscribe.next(),this.ngUnsubscribe.complete()}setCustomParameterSet(){if(this.allowCustomParameterSet){if(this.form.get("parameterSetId").value!==this.customParameterSet.id){const e=this.form.get("parameterSetDetails"),t=this.pipelineReleases.find(t=>t.id===e.get("pipelineReleaseId").value);this.customParameterSet.indelAfThreshold=e.get("indelAfThreshold").value,this.customParameterSet.indelMinDepth=e.get("indelMinDepth").value,this.customParameterSet.snvAfThreshold=e.get("snvAfThreshold").value,this.customParameterSet.snvMinDepth=e.get("snvMinDepth").value,this.customParameterSet.minReadLength=e.get("minReadLength").value,this.customParameterSet.baseQuality=e.get("baseQuality").value,this.customParameterSet.mappingQuality=e.get("mappingQuality").value,this.customParameterSet.pipelineRelease=t,this.setFormParameterSet(this.customParameterSet),this.enableParameterSetDetails()}}}setFormParameterSet(e){this.form.get("parameterSetId").setValue(e.id,c),this.setFormParameterSetDetails(e)}setFormParameterSetDetails(e){const t=this.form.get("parameterSetDetails");t.get("indelAfThreshold").setValue(e.indelAfThreshold,c),t.get("indelMinDepth").setValue(e.indelMinDepth,c),t.get("snvAfThreshold").setValue(e.snvAfThreshold,c),t.get("snvMinDepth").setValue(e.snvMinDepth,c),t.get("minReadLength").setValue(e.minReadLength,c),t.get("baseQuality").setValue(e.baseQuality,c),t.get("mappingQuality").setValue(e.mappingQuality,c);const n=e.pipelineRelease?e.pipelineRelease.id:null;t.get("pipelineReleaseId").setValue(n,c)}setFormBackgroundId(e){this.form.get("backgroundId").setValue(e)}enableParameterSetDetails(){this.form.get("parameterSetDetails").enable(c),this.isEditable=!0}disableParameterSetDetails(){this.form.get("parameterSetDetails").disable(c),this.isEditable=!1}buildCustomParameterSet(){return{id:"",name:"Custom",createdBy:null,createdAt:null,parameterSetDefault:!1,archived:!1,indelAfThreshold:this.sampleResult.parameterSet.indelAfThreshold,indelMinDepth:this.sampleResult.parameterSet.indelMinDepth,snvAfThreshold:this.sampleResult.parameterSet.snvAfThreshold,snvMinDepth:this.sampleResult.parameterSet.snvMinDepth,minReadLength:this.sampleResult.parameterSet.minReadLength,baseQuality:this.sampleResult.parameterSet.baseQuality,mappingQuality:this.sampleResult.parameterSet.mappingQuality,pipelineRelease:this.sampleResult.parameterSet.pipelineRelease,rocheCatalog:!1}}};d.ctorParameters=()=>[{type:r.b}],a.a([Object(i.F)()],d.prototype,"parameterSets",void 0),a.a([Object(i.F)()],d.prototype,"selectedParameterSetId",void 0),a.a([Object(i.R)()],d.prototype,"onParameterSetChange",void 0),a.a([Object(i.F)()],d.prototype,"pipelineReleases",void 0),a.a([Object(i.F)()],d.prototype,"defaultPipelineRelease",void 0),a.a([Object(i.F)()],d.prototype,"backgrounds",void 0),a.a([Object(i.F)()],d.prototype,"selectedBackgroundId",void 0),a.a([Object(i.R)()],d.prototype,"onBackgroundChange",void 0),a.a([Object(i.F)()],d.prototype,"allowCustomParameterSet",void 0),a.a([Object(i.F)()],d.prototype,"sampleResult",void 0),d=a.a([Object(i.n)({selector:"sgp-client-rerun-settings",template:n("FE/b"),styles:[n("69/+")]})],d)},"asg/":function(e,t){e.exports=""},belq:function(e,t,n){"use strict";n.d(t,"a",function(){return m});var a,i=n("mrSG"),r=n("8Y7J"),s=n("s7LF"),o=n("tTFL"),l=n("1vCo"),c=n("s6ns"),d=n("9HvN");let m=a=class{constructor(e,t,n,a,i){this.dialogRef=e,this.data=t,this.formBuilder=n,this.apiTokenService=a,this.snackBarService=i,this.allTokens=[],this.allTokens=t.allTokens?t.allTokens:[]}ngOnInit(){this.creatingApiToken=this.apiTokenService.creatingApiToken,this.formGroup=this.formBuilder.group({tokenName:this.formBuilder.control("",[...a.TOKEN_NAME_VALIDATORS,Object(d.a)(this.allTokens.map(e=>e.name))])})}tokenNameError(e){return!!this.formGroup.get("tokenName").getError(e)}onCancel(){this.dialogRef.close(null)}onCreate(){const e=this.formGroup.value.tokenName;this.apiTokenService.create(new l.a(e)).subscribe(e=>{this.dialogRef.close(e)},e=>this.snackBarService.error(this.apiTokenService.assembleErrorMessage(e)))}};m.TOKEN_NAME_VALIDATORS=[s.l.required,s.l.maxLength(250),s.l.pattern(/.*\w.*/)],m.ctorParameters=()=>[{type:c.d},{type:void 0,decorators:[{type:r.B,args:[c.a]}]},{type:s.b},{type:l.b},{type:o.a}],m=a=i.a([Object(r.n)({selector:"sgp-client-generate-token",template:n("6F0r"),styles:[n("06wg")]}),i.b(1,Object(r.B)(c.a))],m)},"c+L+":function(e,t){e.exports='<mat-card class="sample-error-card" *ngIf="metricsViolated">\n  <mat-card-header>\n    <mat-icon fontIcon="md-error"></mat-icon>\n    <span *ngIf="metricsViolated.length; else pipelineError" i18n>Checkpoint failures.</span>\n    <ng-template #pipelineError>\n      <span i18n>Trouble with pipeline.</span>\n    </ng-template>\n  </mat-card-header>\n  <mat-card-content>\n    <div *ngIf="metricsViolated?.length; else lookAtLogs">\n      <span i18n>\n        The sample could not be analyzed due to one or more checkpoint failures.\n      </span>\n      <div class="threshold" *ngFor="let violation of metricsViolated;">\n        <mat-icon [ngClass]="\'ERROR\'" fontIcon="md-error"></mat-icon>\n        <span class="metric-name">{{violation.name}}</span>\n        <sas-numeric-range *ngIf="violation.range" [range]="violation.range"></sas-numeric-range>\n      </div>\n    </div>\n    <ng-template #lookAtLogs>\n      <div>\n        <span i18n>The sample could not be analyzed due to a problem with the pipeline.</span>\n        <p>\n          <span i18n>The log files from the pipeline may contain useful information. </span>\n          <a [routerLink]="\'associated-files\'" i18n>See files for this sample.</a>\n        </p>\n        <p>\n          <span i18n>Or contact customer support: </span>\n          <a href="https://sequencing.roche.com/contactus.html" target="_blank">https://sequencing.roche.com/contactus.html</a>\n        </p>\n      </div>\n    </ng-template>\n  </mat-card-content>\n</mat-card>\n'},cJKW:function(e,t,n){"use strict";n.d(t,"a",function(){return a});class a{constructor(){this.pageName="Admin"}}},cWIv:function(e,t){e.exports='<div class="bar">\n  <ng-container *ngFor="let contentType of getContentTypes(usage)">\n    <div class="usage" id="usage-{{contentType}}" *ngIf="usage[contentType] > 0"\n         [ngClass]="getColorClass(contentType)"\n         [ngStyle]="{width: getPercentage(contentType)+\'%\'}">\n    </div>\n  </ng-container>\n</div>\n'},cugU:function(e,t){e.exports='<a [routerLink]="\'/\' + route" routerLinkActive="active">\n  <sgp-client-translation [translationKey] = "caption"></sgp-client-translation>\n  <ng-container *ngIf="count">({{count}})</ng-container>\n</a>\n'},daIZ:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var a=n("mrSG"),i=n("8Y7J"),r=n("e7V2"),s=n("/5w7");let o=class{constructor(){this.TUMOR_NORMAL=s.b.TUMOR_NORMAL}ngOnInit(){}routeToSampleResult(e){return`../../../../${e.sampleId}/result/${e.id}/${r.a.sampleDetails}`}};a.a([Object(i.F)()],o.prototype,"sampleResult",void 0),o=a.a([Object(i.n)({selector:"sgp-client-compared-results",template:n("qn4O"),styles:[n("H4XA")]})],o)},drcE:function(e,t){e.exports='<div fxFlex id="show-token-component">\n  <div mat-dialog-title class="header-page-title" fxLayout="row" fxLayoutAlign="space-between center">\n    <div i18n>Generate new token</div>\n    <mat-icon class="md-18" (click)="onCancel()" fontIcon="md-clear"></mat-icon>\n  </div>\n    <div mat-dialog-content class="card-body">\n      <div class="title" i18n>Token created successfully!</div>\n      <div i18n>\n        Please make a note of the token as this will be the only time you will be able to view it.\n        After this, it will be stored as a hash for your protection.\n      </div>\n      <table class="token-content">\n        <tr>\n          <th fxLayout="row" fxLayoutAlign="space-between center">\n            <span>{{data.name}}</span>\n            <button mat-button class="mat-raised-button" [color]="copied ? undefined : \'primary\'"\n                    [disabled]="!hasAccessToClipboard()"\n                    (click)="onCopyTokenFromCell(tokenBody)" i18n>Copy token</button>\n          </th>\n        </tr>\n        <tr>\n          <td class="token-body" #tokenBody (click)="copied = true">{{data.token}}</td>\n        </tr>\n      </table>\n    </div>\n\n    <div mat-dialog-actions fxLayout="row" fxLayoutAlign="end">\n      <button mat-button\n              id="got-it" (click)="onGotIt()" [disabled]="!copied" i18n>\n        OK, got it\n      </button>\n    </div>\n</div>\n'},e2ko:function(e,t){e.exports=".nav-bar {\n  box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.16);\n}\n\n.header.main-header {\n  padding: 20px;\n}\n\nspan.icons-in-header {\n  float: right;\n  height: 1.3em;\n  position: relative;\n  top: -4px;\n}\n\nspan.icons-in-header #roche-logo {\n  margin-left: 20px;\n}\n\nmat-icon.nav {\n  cursor: pointer;\n  margin-right: 20px;\n  margin-left: -4px;\n  vertical-align: bottom;\n}\n\nspan.product-title {\n  font-size: 18px;\n  font-weight: bold;\n  line-height: 22px;\n  padding: 14px 14px 14px 0;\n}\n\nspan.page-title {\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 24px;\n  padding: 14px;\n}"},eRCZ:function(e,t,n){"use strict";function a(e){return e?Object.keys(e).filter(t=>e[t]>0):[]}n.d(t,"c",function(){return a}),n.d(t,"b",function(){return r}),n.d(t,"a",function(){return o});const i=new Map([["demultiplexedReads","demux"],["trashed","trash"],["sampleResults","result"]]);function r(e){return i.get(e)}const s=new Map([["demultiplexedReads","Demultiplexed reads"],["trashed","In trash"],["sampleResults","Sample result files"]]);function o(e){return s.get(e)}},ek7D:function(e,t,n){"use strict";n.d(t,"a",function(){return l});var a=n("mrSG"),i=n("8Y7J"),r=n("ej43"),s=n("F+/O"),o=n("U/RS");let l=class{constructor(e){this.authenticationService=e}ngOnInit(){this.authenticationService.isAuthenticated().subscribe()}userIsOnlyOperator(e){return e.roles.every(e=>e===s.c.LAB_OPERATOR)}logout(){confirm("You are logging off.")&&this.authenticationService.logout(()=>{})}help(){window.open(o.b,"blank")}};l.ctorParameters=()=>[{type:r.a}],l=a.a([Object(i.n)({selector:"sas-usual-icons",template:n("+DC3"),styles:[n("F1G5")]})],l)},ezbz:function(e,t){e.exports=".nav-bar {\n  box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.16);\n}\n\n.header.main-header {\n  padding: 20px;\n}\n\nspan.icons-in-header {\n  float: right;\n  height: 1.3em;\n  position: relative;\n  top: -4px;\n}\n\nspan.icons-in-header #roche-logo {\n  margin-left: 20px;\n}\n\nmat-icon.nav {\n  cursor: pointer;\n  margin-right: 20px;\n  margin-left: -4px;\n  vertical-align: bottom;\n}\n\nspan.product-title {\n  font-size: 18px;\n  font-weight: bold;\n  line-height: 22px;\n  padding: 14px 14px 14px 0;\n}\n\nspan.page-title {\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 24px;\n  padding: 14px;\n}\n\na {\n  text-decoration: none;\n  font-size: 18px;\n  font-weight: normal;\n  color: #191919;\n}"},"fA/V":function(e,t){e.exports=".mat-dialog-container {\n  padding-top: 1em;\n}\n\n#create-token-component .mat-dialog-title, #show-token-component .mat-dialog-title {\n  font-size: 18px;\n  font-weight: bold;\n  line-height: 1.5em;\n  margin-bottom: 1em;\n}\n\n#create-token-component .mat-dialog-content .title, #show-token-component .mat-dialog-content .title {\n  margin-bottom: 1em;\n}\n\n#create-token-component .mat-dialog-actions button, #show-token-component .mat-dialog-actions button {\n  margin: 1em 0 0.5em 1em;\n}\n\n.mat-dialog-content table {\n  margin-top: 1em;\n}\n\n.mat-dialog-content table th, .mat-dialog-content table td {\n  padding: 0.5em 1em;\n}\n\n.mat-dialog-content table th.token-body, .mat-dialog-content table td.token-body {\n  word-break: break-all;\n}\n\n.mat-dialog-content table, .mat-dialog-content table > tr > td {\n  border: 2px solid lightgray;\n  border-collapse: collapse;\n}"},gioS:function(e,t){e.exports="mat-card.sample-error-card {\n  box-sizing: border-box;\n  padding: 0;\n  padding-bottom: 20px;\n  margin-right: 0;\n}\nmat-card.sample-error-card mat-card-header {\n  padding: 10px 20px;\n  background-color: #cc0033;\n  color: white;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\nmat-card.sample-error-card mat-card-header span {\n  margin-left: 10px;\n  font-size: 14px;\n  line-height: 24px;\n}\nmat-card.sample-error-card mat-card-content {\n  margin: 20px;\n  background-color: white;\n}\nmat-card.sample-error-card mat-card-content .threshold {\n  margin-bottom: 10px;\n}\nmat-card.sample-error-card mat-card-content .threshold .mat-icon {\n  position: relative;\n  top: 7px;\n}\nmat-card.sample-error-card mat-card-content .threshold .metric-name {\n  margin: 0 10px;\n}"},"ht/x":function(e,t){e.exports='<mat-card id="thresholds-{{metric.key}}">\n  <mat-card-header><mat-card-title>{{caption}}</mat-card-title></mat-card-header>\n  <mat-card-content>\n    <ng-container *ngIf="sortedThresholds.length > 0; else rangesNotDefined">\n      <div class="threshold" *ngFor="let threshold of sortedThresholds">\n        <mat-icon [ngClass]="threshold.status" fontIcon="{{iconForStatus(threshold.status)}}"></mat-icon>\n        <sas-numeric-range [range]="threshold.range"></sas-numeric-range>\n      </div>\n    </ng-container>\n    <ng-template #rangesNotDefined>\n      <div class="threshold" i18n>Ranges are not defined for this metric.</div>\n    </ng-template>\n  </mat-card-content>\n</mat-card>\n'},ifTL:function(e,t){e.exports='<mat-card *ngIf="sampleResult">\n  <mat-card-header>\n    <mat-card-title>\n      <sgp-client-analysis-icon color="gray"></sgp-client-analysis-icon>\n      <div i18n>Sample details</div>\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]="form">\n      <div fxLayout="row" fxLayoutAlign="none" class="metadata">\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Sample ID</div>\n          <div *ngIf="!isEditable" class="can-be-long">{{sampleId}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Sample ID</mat-label>\n              <input matInput type="text" [value]="sampleId" disabled>\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Sample Type</div>\n          <div *ngIf="!isEditable">{{sampleResult.type | sampleType}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Sample Type</mat-label>\n              <mat-select formControlName="type">\n                <mat-option *ngFor="let type of sampleTypes" [value]="type">\n                  {{type | sampleType}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Panel</div>\n          <div *ngIf="!isEditable" class="can-be-long">{{sampleResult.panel.name}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Panel</mat-label>\n              <mat-select formControlName="panel">\n                <mat-option *ngFor="let panel of panels" [value]="panel.id">\n                  {{panel.name}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Input mass</div>\n          <div *ngIf="!isEditable">{{sampleResult.inputMass | decimal}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Input mass</mat-label>\n              <input matInput type="number" formControlName="inputMass" step="0.01">\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Q-ratio</div>\n          <div *ngIf="!isEditable">{{sampleResult.qratio | decimal}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Q-ratio</mat-label>\n              <input matInput type="number" formControlName="qratio" step="0.01">\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <div fxLayout="row" fxLayoutAlign="none" class="metadata">\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Barcode</div>\n          <div *ngIf="!isEditable">{{sampleResult.barcode.name}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Barcode</mat-label>\n              <input matInput type="text" [value]="sampleResult.barcode.name" disabled>\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Application mode</div>\n          <div *ngIf="!isEditable">{{sampleResult.applicationMode | sentenceCase}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Application mode</mat-label>\n              <mat-select formControlName="applicationMode">\n                <mat-option *ngFor="let sampleMode of sampleModes" [value]="sampleMode">\n                  {{sampleMode | sentenceCase}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Isolated mass</div>\n          <div *ngIf="!isEditable">{{sampleResult.isolatedMass | decimal}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Isolated mass</mat-label>\n              <input matInput type="number" formControlName="isolatedMass" step="0.01">\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>Plasma volume</div>\n          <div *ngIf="!isEditable">{{sampleResult.plasmaVolume | decimal}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>Plasma volume</mat-label>\n              <input matInput type="number" formControlName="plasmaVolume" step="0.01">\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxFlex="20">\n          <div *ngIf="!isEditable" class="name" i18n>UMI</div>\n          <div *ngIf="!isEditable">{{sampleResult.umi | booleanFormat}}</div>\n          <div *ngIf="isEditable">\n            <mat-form-field appearance="fill">\n              <mat-label i18n>UMI</mat-label>\n              <mat-select formControlName="umi">\n                <mat-option [value]="true">{{true | booleanFormat}}</mat-option>\n                <mat-option [value]="false">{{false | booleanFormat}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </form>\n  </mat-card-content>\n  <button mat-button color="primary" (click)="editDetails()" [disabled]="isEditable" i18n>Edit details</button>\n</mat-card>\n'},j0KX:function(e,t){e.exports=".analysis-tile {\n  border: 2px solid #e8e8e8;\n  box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.16);\n  max-width: 18em;\n  min-width: 18em;\n  cursor: pointer;\n}\n.analysis-tile > div {\n  border-bottom: 2px solid #efefef;\n  padding: 1em 1.5em 1em 30px;\n}\n.analysis-tile > div.color-name {\n  border-bottom: 2px solid;\n  min-height: 50px;\n  padding: 10px 20px;\n}\n.analysis-tile > div.color-name sgp-client-analysis-icon {\n  height: 44px;\n  vertical-align: middle;\n  margin-right: 0.7em;\n}\n.analysis-tile > div.color-name div.name {\n  display: inline-block;\n  max-width: 11em;\n  word-break: break-word;\n}\n.analysis-tile > div.samples .sample-count {\n  font-size: 16px;\n  font-weight: bold;\n  margin-right: 0.6em;\n}\n.analysis-tile > div.status {\n  font-size: 14px;\n  font-weight: bold;\n}\n.analysis-tile > div.status .mat-icon, .analysis-tile > div.status .mat-spinner {\n  float: right;\n}\n.analysis-tile > div.timing {\n  color: #0066cc;\n}\n.analysis-tile > div .caption {\n  color: #bababa;\n  font-size: 12px;\n  font-weight: normal;\n  margin-bottom: 0.2em;\n}\n.analysis-tile > div .name, .analysis-tile > div .date {\n  font-size: 16px;\n  font-weight: bold;\n}\n.analysis-tile .status-blue.color-name {\n  background-color: rgba(0, 102, 204, 0.15);\n  border-bottom-color: #0066cc;\n}\n.analysis-tile .status-blue.mat-icon {\n  color: #0066cc;\n}\n.analysis-tile .status-red.color-name {\n  background-color: rgba(204, 0, 51, 0.15);\n  border-bottom-color: #cc0033;\n}\n.analysis-tile .status-red.mat-icon {\n  color: #cc0033;\n}\n.analysis-tile .status-yellow.color-name {\n  background-color: rgba(255, 196, 20, 0.15);\n  border-bottom-color: #ffc414;\n}\n.analysis-tile .status-yellow.mat-icon {\n  color: #ffc414;\n}\n.analysis-tile .status-green.color-name {\n  background-color: rgba(0, 153, 102, 0.15);\n  border-bottom-color: #009966;\n}\n.analysis-tile .status-green.mat-icon {\n  color: #009966;\n}\n.analysis-tile .status-gray.color-name {\n  background-color: rgba(141, 141, 141, 0.15);\n  border-bottom-color: #8d8d8d;\n}\n.analysis-tile .status-gray.mat-icon {\n  color: #8d8d8d;\n}"},jh1A:function(e,t){e.exports='<mat-card class="">\n  <mat-card-header>\n    <div fxFlex="1 1 14em">\n      <mat-card-title>{{background.name}}</mat-card-title>\n      <mat-card-subtitle>\n        <ng-container i18n>Samples used in background: {{samples?.length}}</ng-container>\n      </mat-card-subtitle>\n    </div>\n    <mat-slide-toggle id="slider-background-default"\n                      [disabled]="!backgroundCanBeDefault || background.backgroundDefault"\n                      [checked]="background.backgroundDefault"\n                      (change)="setDefault()"\n                      [color]="\'primary\'"\n                      fxFlex="0 1 7em"\n                      i18n>\n      Default\n    </mat-slide-toggle>\n    <a id="download-log-file" mat-button mat-raised-button\n       [href]="logFileUrl" [disabled]="!logFileUrl"\n       fxFlex="0 1 10em"\n       i18n>\n      Download log file</a>\n  </mat-card-header>\n  <mat-card-content>\n    <sgp-client-background-samples\n      [canSelect]="false"\n      [backgroundSamples]="samples"\n    >\n    </sgp-client-background-samples>\n  </mat-card-content>\n</mat-card>\n'},kiWL:function(e,t,n){"use strict";var a;n.d(t,"a",function(){return a}),function(e){e.NEXTSEQ="NEXTSEQ",e.MISEQ="MISEQ",e.OTHER="OTHER"}(a||(a={}))},"l/3q":function(e,t){e.exports="mat-icon {\n  border-radius: 12px;\n}"},l8PQ:function(e,t){e.exports='<div *ngIf="metric" id="details-{{metric.key}}" class="qc-metric-details">\n  <div class="metric-name"><span>{{caption}}</span></div>\n  <div class="metric-color-value">\n    <span class="metric-value">\n      <mat-icon [ngClass]="metric.status" *ngIf="!!icon" fontIcon="{{icon}}"></mat-icon>\n      <span>{{metric.value}}</span>\n    </span>\n  </div>\n</div>\n<div *ngIf="isViolation() && showThresholds" class="qc-thresholds" [ngClass]="{\'show-on-left\': putHelpOnLeft}">\n  <sgp-client-thresholds [metric]="metric" [caption]="caption"></sgp-client-thresholds>\n</div>\n'},"mN4/":function(e,t,n){"use strict";n.d(t,"a",function(){return l});var a=n("mrSG"),i=n("8Y7J"),r=n("2Vo4"),s=n("0grb"),o=n("Defs");let l=class{constructor(e){this.apiService=e,this.ANALYSIS_PATH="/analyses",this.BASECALL_ANALYSIS_PATH="/basecall-analyses",this.FASTQ_ANALYSIS_PATH="/fastq-analyses",this.PARSE_CSV_PATH=`${this.ANALYSIS_PATH}:parse-csv`,this.GENERATE_NAME_PATH=`${this.ANALYSIS_PATH}:generate-name`,this.SUBMIT_BASECALL_ANALYSIS_PATH=this.BASECALL_ANALYSIS_PATH,this.SUBMIT_FASTQ_ANALYSIS_PATH=this.FASTQ_ANALYSIS_PATH,this.DOWNLOAD_CSV_PATH="/assets/download/sample-input.csv",this._samples=new r.a(null),this._errors=new r.a([])}get samples(){return this._samples.asObservable()}get errors(){return this._errors.asObservable()}initialize(){this._samples.next(null),this._errors.next(null)}downloadCsvTemplate(){this.apiService.get(this.DOWNLOAD_CSV_PATH).subscribe()}getName(){return this.apiService.get(this.GENERATE_NAME_PATH)}uploadCsv(e){this.apiService.post(this.PARSE_CSV_PATH,e).subscribe(e=>{this._samples.next(e.parsedSamples),this._errors.next(null)},e=>{if(e.error&&e.error.errors&&e.error.errors.length)this._errors.next(e.error.errors);else{const t={errorMessage:e.error.message,row:-1};this._errors.next([t])}this._samples.next(null)})}submitAnalysis(e){if(e instanceof o.b)return this.apiService.post(this.SUBMIT_BASECALL_ANALYSIS_PATH,e);if(e instanceof o.c)return this.apiService.post(this.SUBMIT_FASTQ_ANALYSIS_PATH,e);throw new Error("Unknown analysis type: name="+e.name)}assembleErrorMessage(e){return s.a.assembleErrorMessage(e,"CreateAnalysisSamplesService")}};l.ctorParameters=()=>[{type:s.a}],l=a.a([Object(i.C)({providedIn:"root"})],l)},myW2:function(e,t,n){"use strict";var a;n.d(t,"a",function(){return a}),function(e){e.BACKGROUND_LOG="BACKGROUND_LOG"}(a||(a={}))},n5xw:function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("mrSG"),i=n("8Y7J"),r=n("0grb");let s=class{constructor(){this.ASSOCIATED_FILES_PATH="/associated-files"}getDownloadUrl(e){return`${r.a.SERVER_URI}${this.ASSOCIATED_FILES_PATH}/${e}`}};s=a.a([Object(i.C)({providedIn:"root"})],s)},nO7E:function(e,t,n){"use strict";n.d(t,"d",function(){return l}),n.d(t,"a",function(){return c}),n.d(t,"c",function(){return d}),n.d(t,"b",function(){return m});var a=n("1whG"),i=n("LRne"),r=n("z6cu"),s=n("3E0/"),o=n("9Faq");const l={parentPathSegment:null,pathSegment:"/",files:[{name:"Photos",updatedOn:new Date("1/1/16").getDate(),type:o.a.folder,itemsCount:11,pathSegment:"/Photos",readable:!0},{name:"Recipes",updatedOn:new Date("1/17/16").getDate(),type:o.a.folder,itemsCount:22,pathSegment:"/Recipes",readable:!0},{name:"Work",updatedOn:new Date("1/28/16").getDate(),type:o.a.folder,itemsCount:33,pathSegment:"/Work",readable:!1},{name:"reminders.txt",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/reminders.txt",readable:!0},{name:"confidencial.txt",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/confidencial.txt",readable:!1},{name:"read1.fastq",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/read1.fastq",readable:!0},{name:"read2.fastq.gz",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/read2.fastq.gz",readable:!0},{name:"read3.fastq",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/read3.fastq",readable:!0},{name:"read4.fastq.gz",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/read4.fastq.gz",readable:!0},{name:"read5.fastq",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/read5.fastq",readable:!0},{name:"read6.fastq.gz",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/read6.fastq.gz",readable:!0},{name:"unreacheable_read.fastq",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/unreacheable_read.fastq",readable:!1},{name:"read.fastq.foo",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/read.fastq.foo",readable:!0},{name:"unreacheable_read.fastq.foo",updatedOn:new Date("1/28/16").getDate(),type:o.a.file,pathSegment:"/unreacheable_read.fastq.foo",readable:!1}]};class c extends a.a{get(e,t){const n="/"!==t&&t?t.split("/").length:1,a={parentPathSegment:t?t.split("/").slice(0,-1).join("/"):null,pathSegment:t,files:l.files.map(e=>{const a=Object.assign({},e);return a.name=`${n}-${e.name}`,a.pathSegment=`${t}/${a.name}`,a})};return Object(i.a)(a)}getStorageUsage(){return Object(i.a)({demultiplexedReads:1,sampleResults:2,trashed:3})}}class d extends a.a{get(e,t){return Object(r.a)({error:{message:"oops!"}})}}class m extends c{get(e,t){return super.get(e,t).pipe(Object(s.a)(5e3))}}},nlSU:function(e,t){e.exports="td {\n  padding: 10px 20px 10px 0;\n}\ntd .usage {\n  height: 20px;\n  width: 20px;\n  border-radius: 5px;\n}\na {\n  margin-bottom: 4px;\n}"},"oa/N":function(e,t,n){"use strict";n.d(t,"a",function(){return s});var a=n("mrSG"),i=n("8Y7J"),r=n("ACmb");let s=class{constructor(){this.WhyNoVariants=r.a}ngOnInit(){}};a.a([Object(i.F)()],s.prototype,"kind",void 0),a.a([Object(i.F)()],s.prototype,"reason",void 0),s=a.a([Object(i.n)({selector:"sas-no-variants",template:n("Oxkd"),styles:[n("92+W")]})],s)},qn4O:function(e,t){e.exports='<div fxLayout="column" fxLayoutAlign="none" class="metadata">\n  <div fxFlex="50" fxLayout="column" fxLayoutAlign="start none" *ngIf="sampleResult.applicationMode === TUMOR_NORMAL">\n    <div class="name" i18n>Original tumor sample ID</div>\n    <div>\n      <a routerLink="{{routeToSampleResult(sampleResult.tumorSampleResult)}}" class="user-supplied">\n        {{sampleResult.tumorSampleResult.sampleName}}</a>\n      <div class="date-time"> ({{sampleResult.tumorSampleResult.createdAt | sgpDateTimeFormat}})</div>\n    </div>\n  </div>\n  <div fxFlex="50" fxLayout="column" fxLayoutAlign="start none" *ngIf="sampleResult.applicationMode === TUMOR_NORMAL">\n    <div class="name" i18n>Original normal sample ID</div>\n    <div>\n      <a routerLink="{{routeToSampleResult(sampleResult.normalSampleResult)}}" class="user-supplied">\n        {{sampleResult.normalSampleResult.sampleName}}</a>\n      <div class="date-time"> ({{sampleResult.normalSampleResult.createdAt | sgpDateTimeFormat}})</div>\n    </div>\n  </div>\n</div>\n'},r49G:function(e,t,n){"use strict";n.d(t,"a",function(){return c});var a=n("mrSG"),i=n("8Y7J"),r=n("s6ns"),s=n("wuA3"),o=n("R6Eq"),l=n("4TB1");let c=class{constructor(e,t){this.dialog=e,this.analysisService=t,this.onCancel=new i.w}get disabled(){let e=!0;return this.analysis&&(e=this.analysis.status===l.a.CANCELED||!Object(l.b)(this.analysis.status)),e}ngOnInit(){}confirmCancel(){const e=["Are you sure you want to cancel this analysis?"];this.analysis.status===l.a.DEMULTIPLEXING?e.push("This action will stop the analysis in its current state, and will delete all uploaded and demultiplexed sequencing data from the cloud."):e.push("This action will stop the analysis in its current state, and will delete any uploaded sequencing data from the cloud.");const t={title:"Cancel Analysis",contents:e,cancelLabel:"No, leave it running",proceedLabel:"Yes, cancel the analysis"};return o.a.confirm("confirm-delete-token-dialog",t,{width:"60%"},this.dialog).afterClosed()}cancel(){this.confirmCancel().subscribe(e=>{e&&this.analysisService.cancelAnalysis(this.analysis.id).subscribe(()=>{this.onCancel.emit()})})}};c.ctorParameters=()=>[{type:r.b},{type:s.a}],a.a([Object(i.F)()],c.prototype,"analysis",void 0),a.a([Object(i.R)()],c.prototype,"onCancel",void 0),c=a.a([Object(i.n)({selector:"sgp-client-cancel-analysis",template:n("IM3n"),styles:[n("AVtn")]})],c)},rZVo:function(e,t){e.exports='<mat-card>\n  <mat-card-header>\n    <mat-card-title class="header-title">{{title}}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-divider></mat-divider>\n    <mat-list>\n      <mat-list-item *ngFor="let file of files" class="file rss-highlight-on-hover" (click)="download(file)">\n        <a mat-list-icon href="{{getDownloadUrl(file.id)}}" target="_blank">\n          <mat-icon fontSet="material-icons-outline" fontIcon="md-insert_drive_file"></mat-icon>\n        </a>\n        <h4 mat-line><a href="{{getDownloadUrl(file.id)}}" target="_blank">{{file.name}}</a></h4>\n        <p mat-line>{{file.size | fileSize}} </p>\n      </mat-list-item>\n    </mat-list>\n  </mat-card-content>\n</mat-card>\n'},sOcl:function(e,t){e.exports=".header-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.header-page-title {\n  font-size: 18px;\n  font-weight: normal;\n  color: #191919;\n}\n\n.table-name {\n  font-size: 24px;\n  font-weight: normal;\n  color: #191919;\n  line-height: 24px;\n}\n\n.card-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: #191919;\n}\n\n.card-body {\n  font-size: 14px;\n  font-weight: normal;\n  color: #4d4d4d;\n}\n\n.body-1 {\n  font-size: 14px;\n  font-weight: normal;\n  color: #191919;\n}\n\n.body-2 {\n  font-size: 14px;\n  font-weight: bold;\n  color: #191919;\n}\n\nmat-card {\n  margin-right: 0;\n}\n\nmat-card mat-card-header {\n  -webkit-box-pack: justify;\n          justify-content: space-between;\n}\n\nmat-card mat-card-header mat-card-title sgp-client-analysis-icon, mat-card mat-card-header mat-card-title mat-icon, mat-card mat-card-header mat-card-title img {\n  vertical-align: middle;\n  margin-right: 10px;\n  width: 44px;\n  height: 44px;\n}\n\nmat-card mat-card-header mat-card-title div {\n  display: inline-block;\n  vertical-align: middle;\n}\n\nmat-card mat-card-content {\n  background-color: white;\n  padding-top: 20px;\n}\n\nmat-card mat-card-content .metadata > div {\n  color: #191919;\n  margin-bottom: 20px;\n}\n\nmat-card mat-card-content .metadata > div .name {\n  font-size: 12px;\n  font-weight: normal;\n  color: #bababa;\n}\n\nmat-card mat-card-footer {\n  border-top: 1px solid #e8e8e8;\n  direction: rtl;\n}"},tY6D:function(e,t,n){"use strict";var a=n("mrSG"),i=n("8Y7J"),r=n("qNuh"),s=n("4h67");function o(e){return"number"==typeof e}var l,c=n("V7Wo");n.d(t,"a",function(){return m});const d=[r.a.ERROR,r.a.WARNING];let m=l=class{constructor(){this.putHelpOnLeft=!1,this.showThresholds=!1,this.isNumeric=o}ngOnInit(){this.icon=s.a.forStatus(this.metric.status),this.caption=this.getCaption(this.metric)}onMouseEnter(e){this.timerForHideHelp&&clearTimeout(this.timerForHideHelp),this.timerForShowHelp=setTimeout(()=>{const t=e.x-e.offsetX,n=e.target.offsetWidth;this.putHelpOnLeft=document.body.offsetWidth<t+n+c.a.HSPACE_NEEDED,this.showThresholds=!0},l.SHOW_HELP_DELAY)}onMouseLeave(e){this.timerForShowHelp&&clearTimeout(this.timerForShowHelp),this.timerForHideHelp=setTimeout(()=>this.showThresholds=!1,l.HIDE_HELP_DELAY)}getCaption(e){return e.name||"???"+e.key}isViolation(){return this.metric&&d.includes(this.metric.status)}};m.SHOW_HELP_DELAY=300,m.HIDE_HELP_DELAY=600,a.a([Object(i.F)()],m.prototype,"metric",void 0),a.a([Object(i.z)("mouseenter",["$event"])],m.prototype,"onMouseEnter",null),a.a([Object(i.z)("mouseleave",["$event"])],m.prototype,"onMouseLeave",null),m=l=a.a([Object(i.n)({selector:"sgp-client-qc-metric-details",template:n("l8PQ"),styles:[n("u9Af"),n("l/3q")]})],m)},"td/f":function(e,t){e.exports=""},u9Af:function(e,t){e.exports=".qc-thresholds, .qc-metric-details {\n  display: inline-block;\n}\n\n.mat-icon {\n  padding-right: 8px;\n  vertical-align: text-top;\n}\n\n.metric-name {\n  color: #bababa;\n  font-size: 12px;\n  font-weight: normal;\n  overflow-wrap: break-word;\n  height: 40px;\n  overflow-y: hidden;\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n          flex-direction: column;\n  -webkit-box-pack: center;\n          justify-content: center;\n}\n\n.metric-color-value {\n  margin-top: 10px;\n  white-space: nowrap;\n}\n\n.metric-value {\n  font-size: 18px;\n  font-weight: bold;\n  position: relative;\n  top: -6px;\n  -webkit-box-align: center;\n          align-items: center;\n}\n\n.qc-metric-details {\n  padding-top: 20px;\n  width: 100%;\n}\n\n.qc-thresholds {\n  position: absolute;\n  left: 99%;\n  width: 240px;\n  z-index: 1;\n}\n\n.qc-thresholds.show-on-left {\n  left: unset;\n  right: 93%;\n}"},vORZ:function(e,t){e.exports='<ng-container *ngFor="let breadcrumb of breadcrumbs; let index = index; let last = last" >\n  <a [routerLink]="breadcrumb.url" routerLinkActive="router-link-active" *ngIf="breadcrumb.icon">\n    <mat-icon class="nav" fontIcon="{{breadcrumb.icon}}"></mat-icon>\n  </a>\n  <span [ngClass]="{\'product-title\': index === 1, \'page-title\': index > 1}" *ngIf="breadcrumb.label">{{breadcrumb.label}}</span>\n  <span class="separator" *ngIf="index > 0 && !last">|</span>\n</ng-container>\n'},vaUp:function(e,t,n){"use strict";n.d(t,"a",function(){return l});var a=n("HDdC"),i=n("LRne"),r=n("IaDw"),s=n("KZpf"),o=n("3E0/");class l extends r.a{getAll(){return this._activePanels.next(s.a.filter(e=>!e.archived)),this._archivedPanels.next(s.a.filter(e=>!!e.archived)),new a.a}getPanel(e){return Object(i.a)(s.a[0])}uploadPanel(e){return Object(i.a)({panel:s.a[0],errors:[]}).pipe(Object(o.a)(2e3))}createPanel(e,t){return Object(i.a)(s.a[0]).pipe(Object(o.a)(2e3))}getBackgroundInPanel(e,t){return Object(i.a)([s.f,s.e].find(e=>e.id===t))}addBackgroundToPanel(e,t){return Object(i.a)(s.g)}}},wuA3:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var a=n("mrSG"),i=n("8Y7J"),r=n("vkgz"),s=n("0grb");let o=class{constructor(e){this.apiService=e,this.ANALYSES_PATH="/analyses",this.SPRING_PAGE_LIMIT=2e3,this.nAnalyses=0}initCount(){return this.requestPage(1,1)}getAll(){return this.requestPage(0,Math.max(this.nAnalyses+1,this.SPRING_PAGE_LIMIT))}getPage(e,t){return this.requestPage(e,t)}requestPage(e,t){return this.apiService.get(`${this.ANALYSES_PATH}/?size=${t}&page=${e}`).pipe(Object(r.a)(e=>{this.nAnalyses=e.totalElements}))}assembleErrorMessage(e){return s.a.assembleErrorMessage(e,"AnalysisService")}getCanBulkDownload(e){return this.apiService.get(`${this.ANALYSES_PATH}/${e}:can-bulk-download`)}getBulkDownloadUrl(e){return`${s.a.SERVER_URI}${this.ANALYSES_PATH}/${e}:bulk-download`}deleteAnalysis(e){return this.apiService.delete(this.ANALYSES_PATH+"/"+e)}cancelAnalysis(e){return this.apiService.put(`${this.ANALYSES_PATH}/${e}:cancel`)}get(e){return this.apiService.get(`${this.ANALYSES_PATH}/${e}`)}};o.ctorParameters=()=>[{type:s.a}],o=a.a([Object(i.C)({providedIn:"root"})],o)},wvKS:function(e,t,n){"use strict";var a;function i(e){return a[e]}n.d(t,"a",function(){return i}),function(e){e.NEXTSEQ="Illumina NextSeq 500/550",e.MISEQ="Illumina MiSeq",e.OTHER="Other"}(a||(a={}))},xXQr:function(e,t){e.exports=".header.tabs-header {\n  padding: 9px 20px;\n  line-height: 36px;\n}\n\n.sub-header .drop-down-menu {\n  background-color: rgba(25, 25, 25, 0.03);\n}\n\na {\n  font-size: 14px;\n  font-weight: normal;\n  text-decoration: none;\n  color: #191919;\n}\n\na.active {\n  color: #0066cc;\n  padding-bottom: 1.2em;\n  border-bottom: 3px solid #0066cc;\n}\n\na, span {\n  margin-right: 20px;\n  padding: 10px 0;\n}"}}]);